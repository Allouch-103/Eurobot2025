ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/main.c"
  20              		.section	.text.bool_subscriber_callback,"ax",%progbits
  21              		.align	1
  22              		.global	bool_subscriber_callback
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	bool_subscriber_callback:
  28              	.LVL0:
  29              	.LFB143:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2024 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "cmsis_os.h"
  22:Core/Src/main.c **** 
  23:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/main.c **** 
  26:Core/Src/main.c **** #include "Odometry.h"
  27:Core/Src/main.c **** #include "Robot_Navi_Euro20.h"
  28:Core/Src/main.c **** #include "Motors.h"
  29:Core/Src/main.c **** #include <stdbool.h>
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s 			page 2


  30:Core/Src/main.c **** #include <rcl/rcl.h>
  31:Core/Src/main.c **** #include <rclc/rclc.h>
  32:Core/Src/main.c **** #include <geometry_msgs/geometry_msgs/msg/vector3.h>
  33:Core/Src/main.c **** #include <std_msgs/msg/bool.h>
  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** extern int sum;
  38:Core/Src/main.c **** volatile bool evitementFlag=false;
  39:Core/Src/main.c **** extern volatile float current_x;
  40:Core/Src/main.c **** extern volatile float current_y;
  41:Core/Src/main.c **** extern volatile float current_phi_deg ;
  42:Core/Src/main.c **** extern volatile float left_radius,right_radius,spacing_encoder,spacing_wheel;
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** extern float** matrix;
  45:Core/Src/main.c **** extern int taille;
  46:Core/Src/main.c **** extern float Vx;
  47:Core/Src/main.c **** extern float Vz;
  48:Core/Src/main.c **** extern float PWMR,PWML,PWM_linear,PWM_angular;
  49:Core/Src/main.c **** extern int PWM;
  50:Core/Src/main.c **** extern int PWM_Min;
  51:Core/Src/main.c **** extern uint32_t right_forward;
  52:Core/Src/main.c **** extern uint32_t right_backward;
  53:Core/Src/main.c **** extern uint32_t left_forward;
  54:Core/Src/main.c **** extern uint32_t left_backward;
  55:Core/Src/main.c **** extern TIM_HandleTypeDef* htim_Motors;
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** extern int right_correction,left_correction;
  58:Core/Src/main.c **** extern volatile float total_right,d_right_counter;
  59:Core/Src/main.c **** extern volatile float total_left,d_left_counter,total_centre;
  60:Core/Src/main.c **** extern int PWM_LB,PWM_RB;
  61:Core/Src/main.c **** extern int coef_correct_dist;
  62:Core/Src/main.c **** extern volatile long total_right_count;
  63:Core/Src/main.c **** extern volatile long total_left_count;
  64:Core/Src/main.c **** extern float test;
  65:Core/Src/main.c **** 
  66:Core/Src/main.c **** extern volatile float spacing_wheel;
  67:Core/Src/main.c **** 
  68:Core/Src/main.c **** volatile int mutex_button=0;
  69:Core/Src/main.c **** 
  70:Core/Src/main.c **** 
  71:Core/Src/main.c **** 
  72:Core/Src/main.c **** extern float kp, ki;
  73:Core/Src/main.c **** 
  74:Core/Src/main.c **** extern volatile double left_speed,left_encoder_speed;
  75:Core/Src/main.c **** extern volatile double right_speed,right_encoder_speed;
  76:Core/Src/main.c **** extern volatile long t;
  77:Core/Src/main.c **** //unsigned long long int delta=0,t0=0;
  78:Core/Src/main.c **** extern int PWM_L,PWM_R;
  79:Core/Src/main.c **** extern int i ;
  80:Core/Src/main.c **** extern char buf[64];
  81:Core/Src/main.c **** 
  82:Core/Src/main.c **** extern double v_rx ;
  83:Core/Src/main.c **** extern double omega_r ;
  84:Core/Src/main.c **** volatile unsigned long ulHighFrequencyTimerTicks;
  85:Core/Src/main.c **** 
  86:Core/Src/main.c **** 
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s 			page 3


  87:Core/Src/main.c **** 
  88:Core/Src/main.c **** 
  89:Core/Src/main.c **** #include <rcl/rcl.h>
  90:Core/Src/main.c **** #include <rcl/error_handling.h>
  91:Core/Src/main.c **** #include <rclc/rclc.h>
  92:Core/Src/main.c **** #include <rclc/executor.h>
  93:Core/Src/main.c **** #include <uxr/client/transport.h>
  94:Core/Src/main.c **** #include <rmw_microxrcedds_c/config.h>
  95:Core/Src/main.c **** #include <rmw_microros/rmw_microros.h>
  96:Core/Src/main.c **** #include <std_msgs/msg/int32.h>
  97:Core/Src/main.c **** #include <service/srv/navi_stm.h>
  98:Core/Src/main.c **** #include <service/srv/set_variables.h>
  99:Core/Src/main.c **** 
 100:Core/Src/main.c **** 
 101:Core/Src/main.c **** /* USER CODE END Includes */
 102:Core/Src/main.c **** 
 103:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
 104:Core/Src/main.c **** /* USER CODE BEGIN PTD */
 105:Core/Src/main.c **** 
 106:Core/Src/main.c **** 
 107:Core/Src/main.c **** 
 108:Core/Src/main.c **** 
 109:Core/Src/main.c **** bool cubemx_transport_open(struct uxrCustomTransport * transport);
 110:Core/Src/main.c **** bool cubemx_transport_close(struct uxrCustomTransport * transport);
 111:Core/Src/main.c **** size_t cubemx_transport_write(struct uxrCustomTransport* transport, const uint8_t * buf, size_t len
 112:Core/Src/main.c **** size_t cubemx_transport_read(struct uxrCustomTransport* transport, uint8_t* buf, size_t len, int ti
 113:Core/Src/main.c **** 
 114:Core/Src/main.c **** void * microros_allocate(size_t size, void * state);
 115:Core/Src/main.c **** void microros_deallocate(void * pointer, void * state);
 116:Core/Src/main.c **** void * microros_reallocate(void * pointer, size_t size, void * state);
 117:Core/Src/main.c **** void * microros_zero_allocate(size_t number_of_elements, size_t size_of_element, void * state);
 118:Core/Src/main.c **** 
 119:Core/Src/main.c **** 
 120:Core/Src/main.c **** 
 121:Core/Src/main.c **** 
 122:Core/Src/main.c **** /* USER CODE END PTD */
 123:Core/Src/main.c **** 
 124:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
 125:Core/Src/main.c **** /* USER CODE BEGIN PD */
 126:Core/Src/main.c **** 
 127:Core/Src/main.c **** //  ROS 2 Core Components
 128:Core/Src/main.c **** rcl_node_t node;
 129:Core/Src/main.c **** rclc_support_t support;
 130:Core/Src/main.c **** rcl_allocator_t allocator;
 131:Core/Src/main.c **** 
 132:Core/Src/main.c **** //  Publisher Components
 133:Core/Src/main.c **** rcl_publisher_t pose_publisher;
 134:Core/Src/main.c **** 
 135:Core/Src/main.c **** // Subscriber Components
 136:Core/Src/main.c **** rcl_subscription_t bool_subscriber;
 137:Core/Src/main.c **** std_msgs__msg__Bool bool_msg;
 138:Core/Src/main.c **** 
 139:Core/Src/main.c **** //  Service Components
 140:Core/Src/main.c **** rcl_service_t service;
 141:Core/Src/main.c **** rclc_executor_t executor ;
 142:Core/Src/main.c **** service__srv__NaviStm_Request request_msg;
 143:Core/Src/main.c **** service__srv__NaviStm_Response response_msg;
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s 			page 4


 144:Core/Src/main.c **** 
 145:Core/Src/main.c **** //  Service Callback
 146:Core/Src/main.c **** void service_callback(const void *request_msg, void *response_msg) {
 147:Core/Src/main.c ****     service__srv__NaviStm_Request *req_in = (service__srv__NaviStm_Request *)request_msg;
 148:Core/Src/main.c ****     service__srv__NaviStm_Response *res_out = (service__srv__NaviStm_Response *)response_msg;
 149:Core/Src/main.c **** 
 150:Core/Src/main.c ****     switch ((int)req_in->arg1) {
 151:Core/Src/main.c ****     			    	  		    case 0 :
 152:Core/Src/main.c ****     			    	  			    HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, 1);
 153:Core/Src/main.c ****     			    	  			    osDelay(10000);
 154:Core/Src/main.c ****     			    	  			    HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, 0);
 155:Core/Src/main.c ****     			    	  			    res_out->result=true;
 156:Core/Src/main.c ****     			    	  			    break;
 157:Core/Src/main.c ****     			    	  		    case 1:  // "move_distance"
 158:Core/Src/main.c ****     			    	  		        move_distance(req_in->arg2, req_in->arg3);
 159:Core/Src/main.c ****     			    	  		        res_out->result = true;
 160:Core/Src/main.c ****     			    	  		        break;
 161:Core/Src/main.c ****     			    	  		    case 2:  // "rotate"
 162:Core/Src/main.c ****     			    	  		        rotate(req_in->arg2, req_in->arg3);
 163:Core/Src/main.c ****     			    	  		        res_out->result = true;
 164:Core/Src/main.c ****     			    	  		        break;
 165:Core/Src/main.c ****     			    	  		    case 5:  // "robotlocate"
 166:Core/Src/main.c ****     			    	  		    	Robot_Locate(req_in->arg2, req_in->arg3,req_in->arg4);
 167:Core/Src/main.c ****     			    	  		      	res_out->result = true;
 168:Core/Src/main.c ****     			    	  		        break;
 169:Core/Src/main.c ****     			    	  		    case 10 :
 170:Core/Src/main.c ****     			    	  		    	PWM_R = 2000;
 171:Core/Src/main.c ****     			    	  		    	PWM_L = 2000;
 172:Core/Src/main.c ****     			    	  		    	run_motors();
 173:Core/Src/main.c ****     			    	  		    	break;
 174:Core/Src/main.c ****     			    	  		    default:
 175:Core/Src/main.c ****     			    	  		    	res_out->result=false ;
 176:Core/Src/main.c ****     			    	  		        // Invalid function number
 177:Core/Src/main.c ****     			    	  		    	stop_motors();
 178:Core/Src/main.c ****     			    	  		}
 179:Core/Src/main.c **** }
 180:Core/Src/main.c **** 
 181:Core/Src/main.c **** void bool_subscriber_callback(const void *msg_in) {
  30              		.loc 1 181 51 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
 182:Core/Src/main.c ****     const std_msgs__msg__Bool *msg = (const std_msgs__msg__Bool *)msg_in;
  35              		.loc 1 182 5 view .LVU1
 183:Core/Src/main.c ****     evitementFlag = msg->data; // true = stop
  36              		.loc 1 183 5 view .LVU2
  37              		.loc 1 183 24 is_stmt 0 view .LVU3
  38 0000 0278     		ldrb	r2, [r0]	@ zero_extendqisi2
  39              		.loc 1 183 19 view .LVU4
  40 0002 014B     		ldr	r3, .L2
  41 0004 1A70     		strb	r2, [r3]
 184:Core/Src/main.c **** //    if (evitementFlag==true){
 185:Core/Src/main.c **** //    	HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, 1);
 186:Core/Src/main.c **** //    	stop_motors();
 187:Core/Src/main.c **** //    }else{    	HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, 0);}
 188:Core/Src/main.c **** 
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s 			page 5


 189:Core/Src/main.c **** 
 190:Core/Src/main.c **** 
 191:Core/Src/main.c **** 
 192:Core/Src/main.c **** }
  42              		.loc 1 192 1 view .LVU5
  43 0006 7047     		bx	lr
  44              	.L3:
  45              		.align	2
  46              	.L2:
  47 0008 00000000 		.word	evitementFlag
  48              		.cfi_endproc
  49              	.LFE143:
  51              		.section	.text.service_callback,"ax",%progbits
  52              		.align	1
  53              		.global	service_callback
  54              		.syntax unified
  55              		.thumb
  56              		.thumb_func
  58              	service_callback:
  59              	.LVL1:
  60              	.LFB142:
 146:Core/Src/main.c ****     service__srv__NaviStm_Request *req_in = (service__srv__NaviStm_Request *)request_msg;
  61              		.loc 1 146 68 is_stmt 1 view -0
  62              		.cfi_startproc
  63              		@ args = 0, pretend = 0, frame = 0
  64              		@ frame_needed = 0, uses_anonymous_args = 0
 146:Core/Src/main.c ****     service__srv__NaviStm_Request *req_in = (service__srv__NaviStm_Request *)request_msg;
  65              		.loc 1 146 68 is_stmt 0 view .LVU7
  66 0000 38B5     		push	{r3, r4, r5, lr}
  67              	.LCFI0:
  68              		.cfi_def_cfa_offset 16
  69              		.cfi_offset 3, -16
  70              		.cfi_offset 4, -12
  71              		.cfi_offset 5, -8
  72              		.cfi_offset 14, -4
  73 0002 0C46     		mov	r4, r1
 147:Core/Src/main.c ****     service__srv__NaviStm_Response *res_out = (service__srv__NaviStm_Response *)response_msg;
  74              		.loc 1 147 5 is_stmt 1 view .LVU8
  75              	.LVL2:
 148:Core/Src/main.c **** 
  76              		.loc 1 148 5 view .LVU9
 150:Core/Src/main.c ****     			    	  		    case 0 :
  77              		.loc 1 150 5 view .LVU10
 150:Core/Src/main.c ****     			    	  		    case 0 :
  78              		.loc 1 150 24 is_stmt 0 view .LVU11
  79 0004 D0ED007A 		vldr.32	s15, [r0]
 150:Core/Src/main.c ****     			    	  		    case 0 :
  80              		.loc 1 150 13 view .LVU12
  81 0008 FDEEE77A 		vcvt.s32.f32	s15, s15
  82 000c 17EE903A 		vmov	r3, s15	@ int
 150:Core/Src/main.c ****     			    	  		    case 0 :
  83              		.loc 1 150 5 view .LVU13
  84 0010 0A2B     		cmp	r3, #10
  85 0012 3FD8     		bhi	.L5
  86 0014 DFE803F0 		tbb	[pc, r3]
  87              	.L7:
  88 0018 06       		.byte	(.L11-.L7)/2
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s 			page 6


  89 0019 18       		.byte	(.L10-.L7)/2
  90 001a 21       		.byte	(.L9-.L7)/2
  91 001b 3E       		.byte	(.L5-.L7)/2
  92 001c 3E       		.byte	(.L5-.L7)/2
  93 001d 2A       		.byte	(.L8-.L7)/2
  94 001e 3E       		.byte	(.L5-.L7)/2
  95 001f 3E       		.byte	(.L5-.L7)/2
  96 0020 3E       		.byte	(.L5-.L7)/2
  97 0021 3E       		.byte	(.L5-.L7)/2
  98 0022 35       		.byte	(.L6-.L7)/2
  99 0023 00       		.p2align 1
 100              	.L11:
 152:Core/Src/main.c ****     			    	  			    osDelay(10000);
 101              		.loc 1 152 22 is_stmt 1 view .LVU14
 102 0024 1E4D     		ldr	r5, .L14
 103 0026 0122     		movs	r2, #1
 104 0028 2021     		movs	r1, #32
 105              	.LVL3:
 152:Core/Src/main.c ****     			    	  			    osDelay(10000);
 106              		.loc 1 152 22 is_stmt 0 view .LVU15
 107 002a 2846     		mov	r0, r5
 108              	.LVL4:
 152:Core/Src/main.c ****     			    	  			    osDelay(10000);
 109              		.loc 1 152 22 view .LVU16
 110 002c FFF7FEFF 		bl	HAL_GPIO_WritePin
 111              	.LVL5:
 153:Core/Src/main.c ****     			    	  			    HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, 0);
 112              		.loc 1 153 22 is_stmt 1 view .LVU17
 113 0030 42F21070 		movw	r0, #10000
 114 0034 FFF7FEFF 		bl	osDelay
 115              	.LVL6:
 154:Core/Src/main.c ****     			    	  			    res_out->result=true;
 116              		.loc 1 154 22 view .LVU18
 117 0038 0022     		movs	r2, #0
 118 003a 2021     		movs	r1, #32
 119 003c 2846     		mov	r0, r5
 120 003e FFF7FEFF 		bl	HAL_GPIO_WritePin
 121              	.LVL7:
 155:Core/Src/main.c ****     			    	  			    break;
 122              		.loc 1 155 22 view .LVU19
 155:Core/Src/main.c ****     			    	  			    break;
 123              		.loc 1 155 37 is_stmt 0 view .LVU20
 124 0042 0123     		movs	r3, #1
 125 0044 2370     		strb	r3, [r4]
 156:Core/Src/main.c ****     			    	  		    case 1:  // "move_distance"
 126              		.loc 1 156 22 is_stmt 1 view .LVU21
 127              	.L4:
 179:Core/Src/main.c **** 
 128              		.loc 1 179 1 is_stmt 0 view .LVU22
 129 0046 38BD     		pop	{r3, r4, r5, pc}
 130              	.LVL8:
 131              	.L10:
 158:Core/Src/main.c ****     			    	  		        res_out->result = true;
 132              		.loc 1 158 25 is_stmt 1 view .LVU23
 133 0048 D0ED020A 		vldr.32	s1, [r0, #8]
 134 004c 90ED010A 		vldr.32	s0, [r0, #4]
 135 0050 FFF7FEFF 		bl	move_distance
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s 			page 7


 136              	.LVL9:
 159:Core/Src/main.c ****     			    	  		        break;
 137              		.loc 1 159 25 view .LVU24
 159:Core/Src/main.c ****     			    	  		        break;
 138              		.loc 1 159 41 is_stmt 0 view .LVU25
 139 0054 0123     		movs	r3, #1
 140 0056 2370     		strb	r3, [r4]
 160:Core/Src/main.c ****     			    	  		    case 2:  // "rotate"
 141              		.loc 1 160 25 is_stmt 1 view .LVU26
 142 0058 F5E7     		b	.L4
 143              	.LVL10:
 144              	.L9:
 162:Core/Src/main.c ****     			    	  		        res_out->result = true;
 145              		.loc 1 162 25 view .LVU27
 146 005a D0ED020A 		vldr.32	s1, [r0, #8]
 147 005e 90ED010A 		vldr.32	s0, [r0, #4]
 148 0062 FFF7FEFF 		bl	rotate
 149              	.LVL11:
 163:Core/Src/main.c ****     			    	  		        break;
 150              		.loc 1 163 25 view .LVU28
 163:Core/Src/main.c ****     			    	  		        break;
 151              		.loc 1 163 41 is_stmt 0 view .LVU29
 152 0066 0123     		movs	r3, #1
 153 0068 2370     		strb	r3, [r4]
 164:Core/Src/main.c ****     			    	  		    case 5:  // "robotlocate"
 154              		.loc 1 164 25 is_stmt 1 view .LVU30
 155 006a ECE7     		b	.L4
 156              	.LVL12:
 157              	.L8:
 166:Core/Src/main.c ****     			    	  		      	res_out->result = true;
 158              		.loc 1 166 22 view .LVU31
 159 006c 90ED031A 		vldr.32	s2, [r0, #12]
 160 0070 D0ED020A 		vldr.32	s1, [r0, #8]
 161 0074 90ED010A 		vldr.32	s0, [r0, #4]
 162 0078 FFF7FEFF 		bl	Robot_Locate
 163              	.LVL13:
 167:Core/Src/main.c ****     			    	  		        break;
 164              		.loc 1 167 24 view .LVU32
 167:Core/Src/main.c ****     			    	  		        break;
 165              		.loc 1 167 40 is_stmt 0 view .LVU33
 166 007c 0123     		movs	r3, #1
 167 007e 2370     		strb	r3, [r4]
 168:Core/Src/main.c ****     			    	  		    case 10 :
 168              		.loc 1 168 25 is_stmt 1 view .LVU34
 169 0080 E1E7     		b	.L4
 170              	.LVL14:
 171              	.L6:
 170:Core/Src/main.c ****     			    	  		    	PWM_L = 2000;
 172              		.loc 1 170 22 view .LVU35
 170:Core/Src/main.c ****     			    	  		    	PWM_L = 2000;
 173              		.loc 1 170 28 is_stmt 0 view .LVU36
 174 0082 4FF4FA63 		mov	r3, #2000
 175 0086 074A     		ldr	r2, .L14+4
 176 0088 1360     		str	r3, [r2]
 171:Core/Src/main.c ****     			    	  		    	run_motors();
 177              		.loc 1 171 22 is_stmt 1 view .LVU37
 171:Core/Src/main.c ****     			    	  		    	run_motors();
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s 			page 8


 178              		.loc 1 171 28 is_stmt 0 view .LVU38
 179 008a 074A     		ldr	r2, .L14+8
 180 008c 1360     		str	r3, [r2]
 172:Core/Src/main.c ****     			    	  		    	break;
 181              		.loc 1 172 22 is_stmt 1 view .LVU39
 182 008e FFF7FEFF 		bl	run_motors
 183              	.LVL15:
 173:Core/Src/main.c ****     			    	  		    default:
 184              		.loc 1 173 22 view .LVU40
 185 0092 D8E7     		b	.L4
 186              	.LVL16:
 187              	.L5:
 175:Core/Src/main.c ****     			    	  		        // Invalid function number
 188              		.loc 1 175 22 view .LVU41
 175:Core/Src/main.c ****     			    	  		        // Invalid function number
 189              		.loc 1 175 37 is_stmt 0 view .LVU42
 190 0094 0023     		movs	r3, #0
 191 0096 0B70     		strb	r3, [r1]
 177:Core/Src/main.c ****     			    	  		}
 192              		.loc 1 177 22 is_stmt 1 view .LVU43
 193 0098 FFF7FEFF 		bl	stop_motors
 194              	.LVL17:
 179:Core/Src/main.c **** 
 195              		.loc 1 179 1 is_stmt 0 view .LVU44
 196 009c D3E7     		b	.L4
 197              	.L15:
 198 009e 00BF     		.align	2
 199              	.L14:
 200 00a0 00000240 		.word	1073872896
 201 00a4 00000000 		.word	PWM_R
 202 00a8 00000000 		.word	PWM_L
 203              		.cfi_endproc
 204              	.LFE142:
 206              		.global	__aeabi_f2d
 207              		.section	.text.publisher_task,"ax",%progbits
 208              		.align	1
 209              		.global	publisher_task
 210              		.syntax unified
 211              		.thumb
 212              		.thumb_func
 214              	publisher_task:
 215              	.LFB144:
 193:Core/Src/main.c **** 
 194:Core/Src/main.c **** //  Publisher Task (Runs Independently)
 195:Core/Src/main.c **** void publisher_task(void *argument) {
 216              		.loc 1 195 37 is_stmt 1 view -0
 217              		.cfi_startproc
 218              		@ Volatile: function does not return.
 219              		@ args = 0, pretend = 0, frame = 24
 220              		@ frame_needed = 0, uses_anonymous_args = 0
 221              	.LVL18:
 222              		.loc 1 195 37 is_stmt 0 view .LVU46
 223 0000 00B5     		push	{lr}
 224              	.LCFI1:
 225              		.cfi_def_cfa_offset 4
 226              		.cfi_offset 14, -4
 227 0002 87B0     		sub	sp, sp, #28
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s 			page 9


 228              	.LCFI2:
 229              		.cfi_def_cfa_offset 32
 230              	.LVL19:
 231              	.L17:
 196:Core/Src/main.c ****     geometry_msgs__msg__Vector3 pose_msg;
 232              		.loc 1 196 5 is_stmt 1 discriminator 1 view .LVU47
 197:Core/Src/main.c **** 
 198:Core/Src/main.c ****     for (;;) {
 233              		.loc 1 198 5 discriminator 1 view .LVU48
 199:Core/Src/main.c ****         // Get pose data
 200:Core/Src/main.c ****         pose_msg.x = current_x;       // Replace with actual function
 234              		.loc 1 200 9 discriminator 1 view .LVU49
 235              		.loc 1 200 20 is_stmt 0 discriminator 1 view .LVU50
 236 0004 0D4B     		ldr	r3, .L19
 237 0006 1868     		ldr	r0, [r3]	@ float
 238 0008 FFF7FEFF 		bl	__aeabi_f2d
 239              	.LVL20:
 240 000c CDE90001 		strd	r0, [sp]
 201:Core/Src/main.c ****         pose_msg.y = current_y;
 241              		.loc 1 201 9 is_stmt 1 discriminator 1 view .LVU51
 242              		.loc 1 201 20 is_stmt 0 discriminator 1 view .LVU52
 243 0010 0B4B     		ldr	r3, .L19+4
 244 0012 1868     		ldr	r0, [r3]	@ float
 245 0014 FFF7FEFF 		bl	__aeabi_f2d
 246              	.LVL21:
 247 0018 CDE90201 		strd	r0, [sp, #8]
 202:Core/Src/main.c ****         pose_msg.z =current_phi_deg;   // Store θ in z
 248              		.loc 1 202 9 is_stmt 1 discriminator 1 view .LVU53
 249              		.loc 1 202 20 is_stmt 0 discriminator 1 view .LVU54
 250 001c 094B     		ldr	r3, .L19+8
 251 001e 1868     		ldr	r0, [r3]	@ float
 252 0020 FFF7FEFF 		bl	__aeabi_f2d
 253              	.LVL22:
 254 0024 CDE90401 		strd	r0, [sp, #16]
 203:Core/Src/main.c **** 
 204:Core/Src/main.c ****         rcl_publish(&pose_publisher, &pose_msg, NULL);
 255              		.loc 1 204 9 is_stmt 1 discriminator 1 view .LVU55
 256 0028 0022     		movs	r2, #0
 257 002a 6946     		mov	r1, sp
 258 002c 0648     		ldr	r0, .L19+12
 259 002e FFF7FEFF 		bl	rcl_publish
 260              	.LVL23:
 205:Core/Src/main.c ****         osDelay(1000);  // Adjust as needed
 261              		.loc 1 205 9 discriminator 1 view .LVU56
 262 0032 4FF47A70 		mov	r0, #1000
 263 0036 FFF7FEFF 		bl	osDelay
 264              	.LVL24:
 198:Core/Src/main.c ****         // Get pose data
 265              		.loc 1 198 5 discriminator 1 view .LVU57
 266 003a E3E7     		b	.L17
 267              	.L20:
 268              		.align	2
 269              	.L19:
 270 003c 00000000 		.word	current_x
 271 0040 00000000 		.word	current_y
 272 0044 00000000 		.word	current_phi_deg
 273 0048 00000000 		.word	pose_publisher
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s 			page 10


 274              		.cfi_endproc
 275              	.LFE144:
 277              		.section	.text.MX_GPIO_Init,"ax",%progbits
 278              		.align	1
 279              		.syntax unified
 280              		.thumb
 281              		.thumb_func
 283              	MX_GPIO_Init:
 284              	.LFB154:
 206:Core/Src/main.c ****     }
 207:Core/Src/main.c **** }
 208:Core/Src/main.c **** 
 209:Core/Src/main.c **** 
 210:Core/Src/main.c **** /* USER CODE END PD */
 211:Core/Src/main.c **** 
 212:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
 213:Core/Src/main.c **** /* USER CODE BEGIN PM */
 214:Core/Src/main.c **** 
 215:Core/Src/main.c **** /* USER CODE END PM */
 216:Core/Src/main.c **** 
 217:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
 218:Core/Src/main.c **** TIM_HandleTypeDef htim1;
 219:Core/Src/main.c **** TIM_HandleTypeDef htim3;
 220:Core/Src/main.c **** TIM_HandleTypeDef htim4;
 221:Core/Src/main.c **** TIM_HandleTypeDef htim7;
 222:Core/Src/main.c **** TIM_HandleTypeDef htim14;
 223:Core/Src/main.c **** 
 224:Core/Src/main.c **** UART_HandleTypeDef huart2;
 225:Core/Src/main.c **** DMA_HandleTypeDef hdma_usart2_rx;
 226:Core/Src/main.c **** DMA_HandleTypeDef hdma_usart2_tx;
 227:Core/Src/main.c **** 
 228:Core/Src/main.c **** /* Definitions for defaultTask */
 229:Core/Src/main.c **** osThreadId_t defaultTaskHandle;
 230:Core/Src/main.c **** const osThreadAttr_t defaultTask_attributes = {
 231:Core/Src/main.c ****   .name = "defaultTask",
 232:Core/Src/main.c ****   .stack_size = 3000 * 4,
 233:Core/Src/main.c ****   .priority = (osPriority_t) osPriorityNormal,
 234:Core/Src/main.c **** };
 235:Core/Src/main.c **** /* USER CODE BEGIN PV */
 236:Core/Src/main.c **** 
 237:Core/Src/main.c **** /* USER CODE END PV */
 238:Core/Src/main.c **** 
 239:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
 240:Core/Src/main.c **** void SystemClock_Config(void);
 241:Core/Src/main.c **** static void MX_GPIO_Init(void);
 242:Core/Src/main.c **** static void MX_DMA_Init(void);
 243:Core/Src/main.c **** static void MX_TIM1_Init(void);
 244:Core/Src/main.c **** static void MX_TIM3_Init(void);
 245:Core/Src/main.c **** static void MX_TIM4_Init(void);
 246:Core/Src/main.c **** static void MX_TIM7_Init(void);
 247:Core/Src/main.c **** static void MX_USART2_UART_Init(void);
 248:Core/Src/main.c **** static void MX_TIM14_Init(void);
 249:Core/Src/main.c **** void StartDefaultTask(void *argument);
 250:Core/Src/main.c **** 
 251:Core/Src/main.c **** /* USER CODE BEGIN PFP */
 252:Core/Src/main.c **** 
 253:Core/Src/main.c **** /* USER CODE END PFP */
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s 			page 11


 254:Core/Src/main.c **** 
 255:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
 256:Core/Src/main.c **** /* USER CODE BEGIN 0 */
 257:Core/Src/main.c **** 
 258:Core/Src/main.c **** /* USER CODE END 0 */
 259:Core/Src/main.c **** 
 260:Core/Src/main.c **** /**
 261:Core/Src/main.c ****   * @brief  The application entry point.
 262:Core/Src/main.c ****   * @retval int
 263:Core/Src/main.c ****   */
 264:Core/Src/main.c **** int main(void)
 265:Core/Src/main.c **** {
 266:Core/Src/main.c **** 
 267:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 268:Core/Src/main.c **** 
 269:Core/Src/main.c **** 
 270:Core/Src/main.c ****   /* USER CODE END 1 */
 271:Core/Src/main.c **** 
 272:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 273:Core/Src/main.c **** 
 274:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 275:Core/Src/main.c ****   HAL_Init();
 276:Core/Src/main.c **** 
 277:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 278:Core/Src/main.c **** 
 279:Core/Src/main.c ****   /* USER CODE END Init */
 280:Core/Src/main.c **** 
 281:Core/Src/main.c ****   /* Configure the system clock */
 282:Core/Src/main.c ****   SystemClock_Config();
 283:Core/Src/main.c **** 
 284:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 285:Core/Src/main.c **** 
 286:Core/Src/main.c ****   /* USER CODE END SysInit */
 287:Core/Src/main.c **** 
 288:Core/Src/main.c ****   /* Initialize all configured peripherals */
 289:Core/Src/main.c ****   MX_GPIO_Init();
 290:Core/Src/main.c ****   MX_DMA_Init();
 291:Core/Src/main.c ****   MX_TIM1_Init();
 292:Core/Src/main.c ****   MX_TIM3_Init();
 293:Core/Src/main.c ****   MX_TIM4_Init();
 294:Core/Src/main.c ****   MX_TIM7_Init();
 295:Core/Src/main.c ****   MX_USART2_UART_Init();
 296:Core/Src/main.c ****   MX_TIM14_Init();
 297:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 298:Core/Src/main.c ****   set_dimentions(40.55628236735574,40.55328236735574,348,227.9);//40.36836,40.59922,246,108.45 ROBO
 299:Core/Src/main.c ****          set_motors(&htim1,4499,TIM_CHANNEL_1,TIM_CHANNEL_2,TIM_CHANNEL_4,TIM_CHANNEL_3);
 300:Core/Src/main.c ****          set_right_encoder(&htim4,TIM4,1000,4,-1);//400 ROBOT KBIR
 301:Core/Src/main.c ****          set_left_encoder(&htim3,TIM3,1000,4,1);
 302:Core/Src/main.c ****          HAL_TIM_Base_Start_IT(&htim7);
 303:Core/Src/main.c ****          set_PWM_min (900,900,900,900);
 304:Core/Src/main.c **** 
 305:Core/Src/main.c **** 
 306:Core/Src/main.c ****   /* USER CODE END 2 */
 307:Core/Src/main.c **** 
 308:Core/Src/main.c ****   /* Init scheduler */
 309:Core/Src/main.c ****   osKernelInitialize();
 310:Core/Src/main.c **** 
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s 			page 12


 311:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_MUTEX */
 312:Core/Src/main.c ****   /* add mutexes, ... */
 313:Core/Src/main.c ****   /* USER CODE END RTOS_MUTEX */
 314:Core/Src/main.c **** 
 315:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_SEMAPHORES */
 316:Core/Src/main.c ****   /* add semaphores, ... */
 317:Core/Src/main.c ****   /* USER CODE END RTOS_SEMAPHORES */
 318:Core/Src/main.c **** 
 319:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_TIMERS */
 320:Core/Src/main.c ****   /* start timers, add new ones, ... */
 321:Core/Src/main.c ****   /* USER CODE END RTOS_TIMERS */
 322:Core/Src/main.c **** 
 323:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_QUEUES */
 324:Core/Src/main.c ****   /* add queues, ... */
 325:Core/Src/main.c ****   /* USER CODE END RTOS_QUEUES */
 326:Core/Src/main.c **** 
 327:Core/Src/main.c ****   /* Create the thread(s) */
 328:Core/Src/main.c ****   /* creation of defaultTask */
 329:Core/Src/main.c ****   defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 330:Core/Src/main.c **** 
 331:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_THREADS */
 332:Core/Src/main.c ****   /* add threads, ... */
 333:Core/Src/main.c ****   /* USER CODE END RTOS_THREADS */
 334:Core/Src/main.c **** 
 335:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_EVENTS */
 336:Core/Src/main.c ****   /* add events, ... */
 337:Core/Src/main.c ****   /* USER CODE END RTOS_EVENTS */
 338:Core/Src/main.c **** 
 339:Core/Src/main.c ****   /* Start scheduler */
 340:Core/Src/main.c ****   osKernelStart();
 341:Core/Src/main.c **** 
 342:Core/Src/main.c ****   /* We should never get here as control is now taken by the scheduler */
 343:Core/Src/main.c **** 
 344:Core/Src/main.c ****   /* Infinite loop */
 345:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 346:Core/Src/main.c ****   while (1)
 347:Core/Src/main.c ****   {
 348:Core/Src/main.c ****     /* USER CODE END WHILE */
 349:Core/Src/main.c **** 
 350:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 351:Core/Src/main.c ****   }
 352:Core/Src/main.c ****   /* USER CODE END 3 */
 353:Core/Src/main.c **** }
 354:Core/Src/main.c **** 
 355:Core/Src/main.c **** /**
 356:Core/Src/main.c ****   * @brief System Clock Configuration
 357:Core/Src/main.c ****   * @retval None
 358:Core/Src/main.c ****   */
 359:Core/Src/main.c **** void SystemClock_Config(void)
 360:Core/Src/main.c **** {
 361:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 362:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 363:Core/Src/main.c **** 
 364:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 365:Core/Src/main.c ****   */
 366:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 367:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s 			page 13


 368:Core/Src/main.c **** 
 369:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 370:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 371:Core/Src/main.c ****   */
 372:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 373:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 374:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 375:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 376:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 377:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 16;
 378:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 336;
 379:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 380:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 381:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 382:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 383:Core/Src/main.c ****   {
 384:Core/Src/main.c ****     Error_Handler();
 385:Core/Src/main.c ****   }
 386:Core/Src/main.c **** 
 387:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 388:Core/Src/main.c ****   */
 389:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 390:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 391:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 392:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 393:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 394:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 395:Core/Src/main.c **** 
 396:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 397:Core/Src/main.c ****   {
 398:Core/Src/main.c ****     Error_Handler();
 399:Core/Src/main.c ****   }
 400:Core/Src/main.c **** }
 401:Core/Src/main.c **** 
 402:Core/Src/main.c **** /**
 403:Core/Src/main.c ****   * @brief TIM1 Initialization Function
 404:Core/Src/main.c ****   * @param None
 405:Core/Src/main.c ****   * @retval None
 406:Core/Src/main.c ****   */
 407:Core/Src/main.c **** static void MX_TIM1_Init(void)
 408:Core/Src/main.c **** {
 409:Core/Src/main.c **** 
 410:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 0 */
 411:Core/Src/main.c **** 
 412:Core/Src/main.c ****   /* USER CODE END TIM1_Init 0 */
 413:Core/Src/main.c **** 
 414:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 415:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 416:Core/Src/main.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 417:Core/Src/main.c **** 
 418:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 1 */
 419:Core/Src/main.c **** 
 420:Core/Src/main.c ****   /* USER CODE END TIM1_Init 1 */
 421:Core/Src/main.c ****   htim1.Instance = TIM1;
 422:Core/Src/main.c ****   htim1.Init.Prescaler = 0;
 423:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 424:Core/Src/main.c ****   htim1.Init.Period = 4500;
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s 			page 14


 425:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 426:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 427:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 428:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim1) != HAL_OK)
 429:Core/Src/main.c ****   {
 430:Core/Src/main.c ****     Error_Handler();
 431:Core/Src/main.c ****   }
 432:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 433:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 434:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 435:Core/Src/main.c ****   {
 436:Core/Src/main.c ****     Error_Handler();
 437:Core/Src/main.c ****   }
 438:Core/Src/main.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 439:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 440:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 441:Core/Src/main.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 442:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 443:Core/Src/main.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 444:Core/Src/main.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 445:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 446:Core/Src/main.c ****   {
 447:Core/Src/main.c ****     Error_Handler();
 448:Core/Src/main.c ****   }
 449:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 450:Core/Src/main.c ****   {
 451:Core/Src/main.c ****     Error_Handler();
 452:Core/Src/main.c ****   }
 453:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 454:Core/Src/main.c ****   {
 455:Core/Src/main.c ****     Error_Handler();
 456:Core/Src/main.c ****   }
 457:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 458:Core/Src/main.c ****   {
 459:Core/Src/main.c ****     Error_Handler();
 460:Core/Src/main.c ****   }
 461:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
 462:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 463:Core/Src/main.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 464:Core/Src/main.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 465:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 466:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 467:Core/Src/main.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 468:Core/Src/main.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 469:Core/Src/main.c ****   {
 470:Core/Src/main.c ****     Error_Handler();
 471:Core/Src/main.c ****   }
 472:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 2 */
 473:Core/Src/main.c **** 
 474:Core/Src/main.c ****   /* USER CODE END TIM1_Init 2 */
 475:Core/Src/main.c ****   HAL_TIM_MspPostInit(&htim1);
 476:Core/Src/main.c **** 
 477:Core/Src/main.c **** }
 478:Core/Src/main.c **** 
 479:Core/Src/main.c **** /**
 480:Core/Src/main.c ****   * @brief TIM3 Initialization Function
 481:Core/Src/main.c ****   * @param None
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s 			page 15


 482:Core/Src/main.c ****   * @retval None
 483:Core/Src/main.c ****   */
 484:Core/Src/main.c **** static void MX_TIM3_Init(void)
 485:Core/Src/main.c **** {
 486:Core/Src/main.c **** 
 487:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 0 */
 488:Core/Src/main.c **** 
 489:Core/Src/main.c ****   /* USER CODE END TIM3_Init 0 */
 490:Core/Src/main.c **** 
 491:Core/Src/main.c ****   TIM_Encoder_InitTypeDef sConfig = {0};
 492:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 493:Core/Src/main.c **** 
 494:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 1 */
 495:Core/Src/main.c **** 
 496:Core/Src/main.c ****   /* USER CODE END TIM3_Init 1 */
 497:Core/Src/main.c ****   htim3.Instance = TIM3;
 498:Core/Src/main.c ****   htim3.Init.Prescaler = 0;
 499:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 500:Core/Src/main.c ****   htim3.Init.Period = 65535;
 501:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 502:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 503:Core/Src/main.c ****   sConfig.EncoderMode = TIM_ENCODERMODE_TI12;
 504:Core/Src/main.c ****   sConfig.IC1Polarity = TIM_ICPOLARITY_RISING;
 505:Core/Src/main.c ****   sConfig.IC1Selection = TIM_ICSELECTION_DIRECTTI;
 506:Core/Src/main.c ****   sConfig.IC1Prescaler = TIM_ICPSC_DIV1;
 507:Core/Src/main.c ****   sConfig.IC1Filter = 0;
 508:Core/Src/main.c ****   sConfig.IC2Polarity = TIM_ICPOLARITY_RISING;
 509:Core/Src/main.c ****   sConfig.IC2Selection = TIM_ICSELECTION_DIRECTTI;
 510:Core/Src/main.c ****   sConfig.IC2Prescaler = TIM_ICPSC_DIV1;
 511:Core/Src/main.c ****   sConfig.IC2Filter = 0;
 512:Core/Src/main.c ****   if (HAL_TIM_Encoder_Init(&htim3, &sConfig) != HAL_OK)
 513:Core/Src/main.c ****   {
 514:Core/Src/main.c ****     Error_Handler();
 515:Core/Src/main.c ****   }
 516:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 517:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 518:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 519:Core/Src/main.c ****   {
 520:Core/Src/main.c ****     Error_Handler();
 521:Core/Src/main.c ****   }
 522:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 2 */
 523:Core/Src/main.c **** 
 524:Core/Src/main.c ****   /* USER CODE END TIM3_Init 2 */
 525:Core/Src/main.c **** 
 526:Core/Src/main.c **** }
 527:Core/Src/main.c **** 
 528:Core/Src/main.c **** /**
 529:Core/Src/main.c ****   * @brief TIM4 Initialization Function
 530:Core/Src/main.c ****   * @param None
 531:Core/Src/main.c ****   * @retval None
 532:Core/Src/main.c ****   */
 533:Core/Src/main.c **** static void MX_TIM4_Init(void)
 534:Core/Src/main.c **** {
 535:Core/Src/main.c **** 
 536:Core/Src/main.c ****   /* USER CODE BEGIN TIM4_Init 0 */
 537:Core/Src/main.c **** 
 538:Core/Src/main.c ****   /* USER CODE END TIM4_Init 0 */
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s 			page 16


 539:Core/Src/main.c **** 
 540:Core/Src/main.c ****   TIM_Encoder_InitTypeDef sConfig = {0};
 541:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 542:Core/Src/main.c **** 
 543:Core/Src/main.c ****   /* USER CODE BEGIN TIM4_Init 1 */
 544:Core/Src/main.c **** 
 545:Core/Src/main.c ****   /* USER CODE END TIM4_Init 1 */
 546:Core/Src/main.c ****   htim4.Instance = TIM4;
 547:Core/Src/main.c ****   htim4.Init.Prescaler = 0;
 548:Core/Src/main.c ****   htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 549:Core/Src/main.c ****   htim4.Init.Period = 65535;
 550:Core/Src/main.c ****   htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 551:Core/Src/main.c ****   htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 552:Core/Src/main.c ****   sConfig.EncoderMode = TIM_ENCODERMODE_TI12;
 553:Core/Src/main.c ****   sConfig.IC1Polarity = TIM_ICPOLARITY_RISING;
 554:Core/Src/main.c ****   sConfig.IC1Selection = TIM_ICSELECTION_DIRECTTI;
 555:Core/Src/main.c ****   sConfig.IC1Prescaler = TIM_ICPSC_DIV1;
 556:Core/Src/main.c ****   sConfig.IC1Filter = 0;
 557:Core/Src/main.c ****   sConfig.IC2Polarity = TIM_ICPOLARITY_RISING;
 558:Core/Src/main.c ****   sConfig.IC2Selection = TIM_ICSELECTION_DIRECTTI;
 559:Core/Src/main.c ****   sConfig.IC2Prescaler = TIM_ICPSC_DIV1;
 560:Core/Src/main.c ****   sConfig.IC2Filter = 0;
 561:Core/Src/main.c ****   if (HAL_TIM_Encoder_Init(&htim4, &sConfig) != HAL_OK)
 562:Core/Src/main.c ****   {
 563:Core/Src/main.c ****     Error_Handler();
 564:Core/Src/main.c ****   }
 565:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 566:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 567:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 568:Core/Src/main.c ****   {
 569:Core/Src/main.c ****     Error_Handler();
 570:Core/Src/main.c ****   }
 571:Core/Src/main.c ****   /* USER CODE BEGIN TIM4_Init 2 */
 572:Core/Src/main.c **** 
 573:Core/Src/main.c ****   /* USER CODE END TIM4_Init 2 */
 574:Core/Src/main.c **** 
 575:Core/Src/main.c **** }
 576:Core/Src/main.c **** 
 577:Core/Src/main.c **** /**
 578:Core/Src/main.c ****   * @brief TIM7 Initialization Function
 579:Core/Src/main.c ****   * @param None
 580:Core/Src/main.c ****   * @retval None
 581:Core/Src/main.c ****   */
 582:Core/Src/main.c **** static void MX_TIM7_Init(void)
 583:Core/Src/main.c **** {
 584:Core/Src/main.c **** 
 585:Core/Src/main.c ****   /* USER CODE BEGIN TIM7_Init 0 */
 586:Core/Src/main.c **** 
 587:Core/Src/main.c ****   /* USER CODE END TIM7_Init 0 */
 588:Core/Src/main.c **** 
 589:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 590:Core/Src/main.c **** 
 591:Core/Src/main.c ****   /* USER CODE BEGIN TIM7_Init 1 */
 592:Core/Src/main.c **** 
 593:Core/Src/main.c ****   /* USER CODE END TIM7_Init 1 */
 594:Core/Src/main.c ****   htim7.Instance = TIM7;
 595:Core/Src/main.c ****   htim7.Init.Prescaler = 83;
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s 			page 17


 596:Core/Src/main.c ****   htim7.Init.CounterMode = TIM_COUNTERMODE_UP;
 597:Core/Src/main.c ****   htim7.Init.Period = 999;
 598:Core/Src/main.c ****   htim7.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 599:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim7) != HAL_OK)
 600:Core/Src/main.c ****   {
 601:Core/Src/main.c ****     Error_Handler();
 602:Core/Src/main.c ****   }
 603:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 604:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 605:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim7, &sMasterConfig) != HAL_OK)
 606:Core/Src/main.c ****   {
 607:Core/Src/main.c ****     Error_Handler();
 608:Core/Src/main.c ****   }
 609:Core/Src/main.c ****   /* USER CODE BEGIN TIM7_Init 2 */
 610:Core/Src/main.c **** 
 611:Core/Src/main.c ****   /* USER CODE END TIM7_Init 2 */
 612:Core/Src/main.c **** 
 613:Core/Src/main.c **** }
 614:Core/Src/main.c **** 
 615:Core/Src/main.c **** /**
 616:Core/Src/main.c ****   * @brief TIM14 Initialization Function
 617:Core/Src/main.c ****   * @param None
 618:Core/Src/main.c ****   * @retval None
 619:Core/Src/main.c ****   */
 620:Core/Src/main.c **** static void MX_TIM14_Init(void)
 621:Core/Src/main.c **** {
 622:Core/Src/main.c **** 
 623:Core/Src/main.c ****   /* USER CODE BEGIN TIM14_Init 0 */
 624:Core/Src/main.c **** 
 625:Core/Src/main.c ****   /* USER CODE END TIM14_Init 0 */
 626:Core/Src/main.c **** 
 627:Core/Src/main.c ****   /* USER CODE BEGIN TIM14_Init 1 */
 628:Core/Src/main.c **** 
 629:Core/Src/main.c ****   /* USER CODE END TIM14_Init 1 */
 630:Core/Src/main.c ****   htim14.Instance = TIM14;
 631:Core/Src/main.c ****   htim14.Init.Prescaler = 0;
 632:Core/Src/main.c ****   htim14.Init.CounterMode = TIM_COUNTERMODE_UP;
 633:Core/Src/main.c ****   htim14.Init.Period = 840-1;
 634:Core/Src/main.c ****   htim14.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 635:Core/Src/main.c ****   htim14.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 636:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim14) != HAL_OK)
 637:Core/Src/main.c ****   {
 638:Core/Src/main.c ****     Error_Handler();
 639:Core/Src/main.c ****   }
 640:Core/Src/main.c ****   /* USER CODE BEGIN TIM14_Init 2 */
 641:Core/Src/main.c **** 
 642:Core/Src/main.c ****   /* USER CODE END TIM14_Init 2 */
 643:Core/Src/main.c **** 
 644:Core/Src/main.c **** }
 645:Core/Src/main.c **** 
 646:Core/Src/main.c **** /**
 647:Core/Src/main.c ****   * @brief USART2 Initialization Function
 648:Core/Src/main.c ****   * @param None
 649:Core/Src/main.c ****   * @retval None
 650:Core/Src/main.c ****   */
 651:Core/Src/main.c **** static void MX_USART2_UART_Init(void)
 652:Core/Src/main.c **** {
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s 			page 18


 653:Core/Src/main.c **** 
 654:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 0 */
 655:Core/Src/main.c **** 
 656:Core/Src/main.c ****   /* USER CODE END USART2_Init 0 */
 657:Core/Src/main.c **** 
 658:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 1 */
 659:Core/Src/main.c **** 
 660:Core/Src/main.c ****   /* USER CODE END USART2_Init 1 */
 661:Core/Src/main.c ****   huart2.Instance = USART2;
 662:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 663:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 664:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 665:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 666:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 667:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 668:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 669:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 670:Core/Src/main.c ****   {
 671:Core/Src/main.c ****     Error_Handler();
 672:Core/Src/main.c ****   }
 673:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 2 */
 674:Core/Src/main.c **** 
 675:Core/Src/main.c ****   /* USER CODE END USART2_Init 2 */
 676:Core/Src/main.c **** 
 677:Core/Src/main.c **** }
 678:Core/Src/main.c **** 
 679:Core/Src/main.c **** /**
 680:Core/Src/main.c ****   * Enable DMA controller clock
 681:Core/Src/main.c ****   */
 682:Core/Src/main.c **** static void MX_DMA_Init(void)
 683:Core/Src/main.c **** {
 684:Core/Src/main.c **** 
 685:Core/Src/main.c ****   /* DMA controller clock enable */
 686:Core/Src/main.c ****   __HAL_RCC_DMA1_CLK_ENABLE();
 687:Core/Src/main.c **** 
 688:Core/Src/main.c ****   /* DMA interrupt init */
 689:Core/Src/main.c ****   /* DMA1_Stream5_IRQn interrupt configuration */
 690:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA1_Stream5_IRQn, 5, 0);
 691:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Stream5_IRQn);
 692:Core/Src/main.c ****   /* DMA1_Stream6_IRQn interrupt configuration */
 693:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA1_Stream6_IRQn, 5, 0);
 694:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Stream6_IRQn);
 695:Core/Src/main.c **** 
 696:Core/Src/main.c **** }
 697:Core/Src/main.c **** 
 698:Core/Src/main.c **** /**
 699:Core/Src/main.c ****   * @brief GPIO Initialization Function
 700:Core/Src/main.c ****   * @param None
 701:Core/Src/main.c ****   * @retval None
 702:Core/Src/main.c ****   */
 703:Core/Src/main.c **** static void MX_GPIO_Init(void)
 704:Core/Src/main.c **** {
 285              		.loc 1 704 1 view -0
 286              		.cfi_startproc
 287              		@ args = 0, pretend = 0, frame = 40
 288              		@ frame_needed = 0, uses_anonymous_args = 0
 289 0000 F0B5     		push	{r4, r5, r6, r7, lr}
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s 			page 19


 290              	.LCFI3:
 291              		.cfi_def_cfa_offset 20
 292              		.cfi_offset 4, -20
 293              		.cfi_offset 5, -16
 294              		.cfi_offset 6, -12
 295              		.cfi_offset 7, -8
 296              		.cfi_offset 14, -4
 297 0002 8BB0     		sub	sp, sp, #44
 298              	.LCFI4:
 299              		.cfi_def_cfa_offset 64
 705:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 300              		.loc 1 705 3 view .LVU59
 301              		.loc 1 705 20 is_stmt 0 view .LVU60
 302 0004 0024     		movs	r4, #0
 303 0006 0594     		str	r4, [sp, #20]
 304 0008 0694     		str	r4, [sp, #24]
 305 000a 0794     		str	r4, [sp, #28]
 306 000c 0894     		str	r4, [sp, #32]
 307 000e 0994     		str	r4, [sp, #36]
 706:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 707:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
 708:Core/Src/main.c **** 
 709:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 710:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
 308              		.loc 1 710 3 is_stmt 1 view .LVU61
 309              	.LBB4:
 310              		.loc 1 710 3 view .LVU62
 311 0010 0194     		str	r4, [sp, #4]
 312              		.loc 1 710 3 view .LVU63
 313 0012 2D4B     		ldr	r3, .L23
 314 0014 1A6B     		ldr	r2, [r3, #48]
 315 0016 42F00402 		orr	r2, r2, #4
 316 001a 1A63     		str	r2, [r3, #48]
 317              		.loc 1 710 3 view .LVU64
 318 001c 1A6B     		ldr	r2, [r3, #48]
 319 001e 02F00402 		and	r2, r2, #4
 320 0022 0192     		str	r2, [sp, #4]
 321              		.loc 1 710 3 view .LVU65
 322 0024 019A     		ldr	r2, [sp, #4]
 323              	.LBE4:
 324              		.loc 1 710 3 view .LVU66
 711:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 325              		.loc 1 711 3 view .LVU67
 326              	.LBB5:
 327              		.loc 1 711 3 view .LVU68
 328 0026 0294     		str	r4, [sp, #8]
 329              		.loc 1 711 3 view .LVU69
 330 0028 1A6B     		ldr	r2, [r3, #48]
 331 002a 42F08002 		orr	r2, r2, #128
 332 002e 1A63     		str	r2, [r3, #48]
 333              		.loc 1 711 3 view .LVU70
 334 0030 1A6B     		ldr	r2, [r3, #48]
 335 0032 02F08002 		and	r2, r2, #128
 336 0036 0292     		str	r2, [sp, #8]
 337              		.loc 1 711 3 view .LVU71
 338 0038 029A     		ldr	r2, [sp, #8]
 339              	.LBE5:
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s 			page 20


 340              		.loc 1 711 3 view .LVU72
 712:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 341              		.loc 1 712 3 view .LVU73
 342              	.LBB6:
 343              		.loc 1 712 3 view .LVU74
 344 003a 0394     		str	r4, [sp, #12]
 345              		.loc 1 712 3 view .LVU75
 346 003c 1A6B     		ldr	r2, [r3, #48]
 347 003e 42F00102 		orr	r2, r2, #1
 348 0042 1A63     		str	r2, [r3, #48]
 349              		.loc 1 712 3 view .LVU76
 350 0044 1A6B     		ldr	r2, [r3, #48]
 351 0046 02F00102 		and	r2, r2, #1
 352 004a 0392     		str	r2, [sp, #12]
 353              		.loc 1 712 3 view .LVU77
 354 004c 039A     		ldr	r2, [sp, #12]
 355              	.LBE6:
 356              		.loc 1 712 3 view .LVU78
 713:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 357              		.loc 1 713 3 view .LVU79
 358              	.LBB7:
 359              		.loc 1 713 3 view .LVU80
 360 004e 0494     		str	r4, [sp, #16]
 361              		.loc 1 713 3 view .LVU81
 362 0050 1A6B     		ldr	r2, [r3, #48]
 363 0052 42F00202 		orr	r2, r2, #2
 364 0056 1A63     		str	r2, [r3, #48]
 365              		.loc 1 713 3 view .LVU82
 366 0058 1B6B     		ldr	r3, [r3, #48]
 367 005a 03F00203 		and	r3, r3, #2
 368 005e 0493     		str	r3, [sp, #16]
 369              		.loc 1 713 3 view .LVU83
 370 0060 049B     		ldr	r3, [sp, #16]
 371              	.LBE7:
 372              		.loc 1 713 3 view .LVU84
 714:Core/Src/main.c **** 
 715:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 716:Core/Src/main.c ****   HAL_GPIO_WritePin(trig_GPIO_Port, trig_Pin, GPIO_PIN_RESET);
 373              		.loc 1 716 3 view .LVU85
 374 0062 1A4D     		ldr	r5, .L23+4
 375 0064 2246     		mov	r2, r4
 376 0066 0221     		movs	r1, #2
 377 0068 2846     		mov	r0, r5
 378 006a FFF7FEFF 		bl	HAL_GPIO_WritePin
 379              	.LVL25:
 717:Core/Src/main.c **** 
 718:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 719:Core/Src/main.c ****   HAL_GPIO_WritePin(LD2_GPIO_Port, LD2_Pin, GPIO_PIN_RESET);
 380              		.loc 1 719 3 view .LVU86
 381 006e 184E     		ldr	r6, .L23+8
 382 0070 2246     		mov	r2, r4
 383 0072 2021     		movs	r1, #32
 384 0074 3046     		mov	r0, r6
 385 0076 FFF7FEFF 		bl	HAL_GPIO_WritePin
 386              	.LVL26:
 720:Core/Src/main.c **** 
 721:Core/Src/main.c ****   /*Configure GPIO pins : PC13 echo_Pin */
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s 			page 21


 722:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_13|echo_Pin;
 387              		.loc 1 722 3 view .LVU87
 388              		.loc 1 722 23 is_stmt 0 view .LVU88
 389 007a 42F20103 		movw	r3, #8193
 390 007e 0593     		str	r3, [sp, #20]
 723:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 391              		.loc 1 723 3 is_stmt 1 view .LVU89
 392              		.loc 1 723 24 is_stmt 0 view .LVU90
 393 0080 0694     		str	r4, [sp, #24]
 724:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 394              		.loc 1 724 3 is_stmt 1 view .LVU91
 395              		.loc 1 724 24 is_stmt 0 view .LVU92
 396 0082 0794     		str	r4, [sp, #28]
 725:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 397              		.loc 1 725 3 is_stmt 1 view .LVU93
 398 0084 05A9     		add	r1, sp, #20
 399 0086 2846     		mov	r0, r5
 400 0088 FFF7FEFF 		bl	HAL_GPIO_Init
 401              	.LVL27:
 726:Core/Src/main.c **** 
 727:Core/Src/main.c ****   /*Configure GPIO pin : trig_Pin */
 728:Core/Src/main.c ****   GPIO_InitStruct.Pin = trig_Pin;
 402              		.loc 1 728 3 view .LVU94
 403              		.loc 1 728 23 is_stmt 0 view .LVU95
 404 008c 0223     		movs	r3, #2
 405 008e 0593     		str	r3, [sp, #20]
 729:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 406              		.loc 1 729 3 is_stmt 1 view .LVU96
 407              		.loc 1 729 24 is_stmt 0 view .LVU97
 408 0090 0127     		movs	r7, #1
 409 0092 0697     		str	r7, [sp, #24]
 730:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 410              		.loc 1 730 3 is_stmt 1 view .LVU98
 411              		.loc 1 730 24 is_stmt 0 view .LVU99
 412 0094 0794     		str	r4, [sp, #28]
 731:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 413              		.loc 1 731 3 is_stmt 1 view .LVU100
 414              		.loc 1 731 25 is_stmt 0 view .LVU101
 415 0096 0894     		str	r4, [sp, #32]
 732:Core/Src/main.c ****   HAL_GPIO_Init(trig_GPIO_Port, &GPIO_InitStruct);
 416              		.loc 1 732 3 is_stmt 1 view .LVU102
 417 0098 05A9     		add	r1, sp, #20
 418 009a 2846     		mov	r0, r5
 419 009c FFF7FEFF 		bl	HAL_GPIO_Init
 420              	.LVL28:
 733:Core/Src/main.c **** 
 734:Core/Src/main.c ****   /*Configure GPIO pin : LD2_Pin */
 735:Core/Src/main.c ****   GPIO_InitStruct.Pin = LD2_Pin;
 421              		.loc 1 735 3 view .LVU103
 422              		.loc 1 735 23 is_stmt 0 view .LVU104
 423 00a0 2023     		movs	r3, #32
 424 00a2 0593     		str	r3, [sp, #20]
 736:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 425              		.loc 1 736 3 is_stmt 1 view .LVU105
 426              		.loc 1 736 24 is_stmt 0 view .LVU106
 427 00a4 0697     		str	r7, [sp, #24]
 737:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s 			page 22


 428              		.loc 1 737 3 is_stmt 1 view .LVU107
 429              		.loc 1 737 24 is_stmt 0 view .LVU108
 430 00a6 0794     		str	r4, [sp, #28]
 738:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 431              		.loc 1 738 3 is_stmt 1 view .LVU109
 432              		.loc 1 738 25 is_stmt 0 view .LVU110
 433 00a8 0894     		str	r4, [sp, #32]
 739:Core/Src/main.c ****   HAL_GPIO_Init(LD2_GPIO_Port, &GPIO_InitStruct);
 434              		.loc 1 739 3 is_stmt 1 view .LVU111
 435 00aa 05A9     		add	r1, sp, #20
 436 00ac 3046     		mov	r0, r6
 437 00ae FFF7FEFF 		bl	HAL_GPIO_Init
 438              	.LVL29:
 740:Core/Src/main.c **** 
 741:Core/Src/main.c ****   /*Configure GPIO pin : PB8 */
 742:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_8;
 439              		.loc 1 742 3 view .LVU112
 440              		.loc 1 742 23 is_stmt 0 view .LVU113
 441 00b2 4FF48073 		mov	r3, #256
 442 00b6 0593     		str	r3, [sp, #20]
 743:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 443              		.loc 1 743 3 is_stmt 1 view .LVU114
 444              		.loc 1 743 24 is_stmt 0 view .LVU115
 445 00b8 0694     		str	r4, [sp, #24]
 744:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 446              		.loc 1 744 3 is_stmt 1 view .LVU116
 447              		.loc 1 744 24 is_stmt 0 view .LVU117
 448 00ba 0794     		str	r4, [sp, #28]
 745:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 449              		.loc 1 745 3 is_stmt 1 view .LVU118
 450 00bc 05A9     		add	r1, sp, #20
 451 00be 0548     		ldr	r0, .L23+12
 452 00c0 FFF7FEFF 		bl	HAL_GPIO_Init
 453              	.LVL30:
 746:Core/Src/main.c **** 
 747:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 748:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
 749:Core/Src/main.c **** }
 454              		.loc 1 749 1 is_stmt 0 view .LVU119
 455 00c4 0BB0     		add	sp, sp, #44
 456              	.LCFI5:
 457              		.cfi_def_cfa_offset 20
 458              		@ sp needed
 459 00c6 F0BD     		pop	{r4, r5, r6, r7, pc}
 460              	.L24:
 461              		.align	2
 462              	.L23:
 463 00c8 00380240 		.word	1073887232
 464 00cc 00080240 		.word	1073874944
 465 00d0 00000240 		.word	1073872896
 466 00d4 00040240 		.word	1073873920
 467              		.cfi_endproc
 468              	.LFE154:
 470              		.section	.text.MX_DMA_Init,"ax",%progbits
 471              		.align	1
 472              		.syntax unified
 473              		.thumb
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s 			page 23


 474              		.thumb_func
 476              	MX_DMA_Init:
 477              	.LFB153:
 683:Core/Src/main.c **** 
 478              		.loc 1 683 1 is_stmt 1 view -0
 479              		.cfi_startproc
 480              		@ args = 0, pretend = 0, frame = 8
 481              		@ frame_needed = 0, uses_anonymous_args = 0
 482 0000 10B5     		push	{r4, lr}
 483              	.LCFI6:
 484              		.cfi_def_cfa_offset 8
 485              		.cfi_offset 4, -8
 486              		.cfi_offset 14, -4
 487 0002 82B0     		sub	sp, sp, #8
 488              	.LCFI7:
 489              		.cfi_def_cfa_offset 16
 686:Core/Src/main.c **** 
 490              		.loc 1 686 3 view .LVU121
 491              	.LBB8:
 686:Core/Src/main.c **** 
 492              		.loc 1 686 3 view .LVU122
 493 0004 0024     		movs	r4, #0
 494 0006 0194     		str	r4, [sp, #4]
 686:Core/Src/main.c **** 
 495              		.loc 1 686 3 view .LVU123
 496 0008 0D4B     		ldr	r3, .L27
 497 000a 1A6B     		ldr	r2, [r3, #48]
 498 000c 42F40012 		orr	r2, r2, #2097152
 499 0010 1A63     		str	r2, [r3, #48]
 686:Core/Src/main.c **** 
 500              		.loc 1 686 3 view .LVU124
 501 0012 1B6B     		ldr	r3, [r3, #48]
 502 0014 03F40013 		and	r3, r3, #2097152
 503 0018 0193     		str	r3, [sp, #4]
 686:Core/Src/main.c **** 
 504              		.loc 1 686 3 view .LVU125
 505 001a 019B     		ldr	r3, [sp, #4]
 506              	.LBE8:
 686:Core/Src/main.c **** 
 507              		.loc 1 686 3 view .LVU126
 690:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Stream5_IRQn);
 508              		.loc 1 690 3 view .LVU127
 509 001c 2246     		mov	r2, r4
 510 001e 0521     		movs	r1, #5
 511 0020 1020     		movs	r0, #16
 512 0022 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 513              	.LVL31:
 691:Core/Src/main.c ****   /* DMA1_Stream6_IRQn interrupt configuration */
 514              		.loc 1 691 3 view .LVU128
 515 0026 1020     		movs	r0, #16
 516 0028 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 517              	.LVL32:
 693:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Stream6_IRQn);
 518              		.loc 1 693 3 view .LVU129
 519 002c 2246     		mov	r2, r4
 520 002e 0521     		movs	r1, #5
 521 0030 1120     		movs	r0, #17
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s 			page 24


 522 0032 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 523              	.LVL33:
 694:Core/Src/main.c **** 
 524              		.loc 1 694 3 view .LVU130
 525 0036 1120     		movs	r0, #17
 526 0038 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 527              	.LVL34:
 696:Core/Src/main.c **** 
 528              		.loc 1 696 1 is_stmt 0 view .LVU131
 529 003c 02B0     		add	sp, sp, #8
 530              	.LCFI8:
 531              		.cfi_def_cfa_offset 8
 532              		@ sp needed
 533 003e 10BD     		pop	{r4, pc}
 534              	.L28:
 535              		.align	2
 536              	.L27:
 537 0040 00380240 		.word	1073887232
 538              		.cfi_endproc
 539              	.LFE153:
 541              		.section	.rodata.StartDefaultTask.str1.4,"aMS",%progbits,1
 542              		.align	2
 543              	.LC0:
 544 0000 00       		.ascii	"\000"
 545 0001 000000   		.align	2
 546              	.LC1:
 547 0004 63756265 		.ascii	"cubemx_node\000"
 547      6D785F6E 
 547      6F646500 
 548              		.align	2
 549              	.LC2:
 550 0010 2F706F73 		.ascii	"/pose_topic\000"
 550      655F746F 
 550      70696300 
 551              		.align	2
 552              	.LC3:
 553 001c 2F626F6F 		.ascii	"/bool_topic\000"
 553      6C5F746F 
 553      70696300 
 554              		.align	2
 555              	.LC4:
 556 0028 2F73746D 		.ascii	"/stm/navi_stm\000"
 556      2F6E6176 
 556      695F7374 
 556      6D00
 557 0036 0000     		.align	2
 558              	.LC5:
 559 0038 706F7365 		.ascii	"posePubTask\000"
 559      50756254 
 559      61736B00 
 560              		.section	.text.StartDefaultTask,"ax",%progbits
 561              		.align	1
 562              		.global	StartDefaultTask
 563              		.syntax unified
 564              		.thumb
 565              		.thumb_func
 567              	StartDefaultTask:
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s 			page 25


 568              	.LVL35:
 569              	.LFB155:
 750:Core/Src/main.c **** 
 751:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 752:Core/Src/main.c **** 
 753:Core/Src/main.c **** /* USER CODE END 4 */
 754:Core/Src/main.c **** 
 755:Core/Src/main.c **** /* USER CODE BEGIN Header_StartDefaultTask */
 756:Core/Src/main.c **** /**
 757:Core/Src/main.c ****   * @brief  Function implementing the defaultTask thread.
 758:Core/Src/main.c ****   * @param  argument: Not used
 759:Core/Src/main.c ****   * @retval None
 760:Core/Src/main.c ****   */
 761:Core/Src/main.c **** /* USER CODE END Header_StartDefaultTask */
 762:Core/Src/main.c **** void StartDefaultTask(void *argument)
 763:Core/Src/main.c **** {
 570              		.loc 1 763 1 is_stmt 1 view -0
 571              		.cfi_startproc
 572              		@ args = 0, pretend = 0, frame = 64
 573              		@ frame_needed = 0, uses_anonymous_args = 0
 574              		.loc 1 763 1 is_stmt 0 view .LVU133
 575 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 576              	.LCFI9:
 577              		.cfi_def_cfa_offset 28
 578              		.cfi_offset 4, -28
 579              		.cfi_offset 5, -24
 580              		.cfi_offset 6, -20
 581              		.cfi_offset 7, -16
 582              		.cfi_offset 8, -12
 583              		.cfi_offset 9, -8
 584              		.cfi_offset 14, -4
 585 0004 93B0     		sub	sp, sp, #76
 586              	.LCFI10:
 587              		.cfi_def_cfa_offset 104
 764:Core/Src/main.c ****   /* USER CODE BEGIN 5 */
 765:Core/Src/main.c **** 	 // Set Micro-ROS transport
 766:Core/Src/main.c **** 	    rmw_uros_set_custom_transport(true, (void *)&huart2,
 588              		.loc 1 766 6 is_stmt 1 view .LVU134
 589 0006 3A4B     		ldr	r3, .L32
 590 0008 0193     		str	r3, [sp, #4]
 591 000a 3A4B     		ldr	r3, .L32+4
 592 000c 0093     		str	r3, [sp]
 593 000e 3A4B     		ldr	r3, .L32+8
 594 0010 3A4A     		ldr	r2, .L32+12
 595 0012 3B49     		ldr	r1, .L32+16
 596 0014 0120     		movs	r0, #1
 597              	.LVL36:
 598              		.loc 1 766 6 is_stmt 0 view .LVU135
 599 0016 FFF7FEFF 		bl	rmw_uros_set_custom_transport
 600              	.LVL37:
 767:Core/Src/main.c **** 	        cubemx_transport_open, cubemx_transport_close,
 768:Core/Src/main.c **** 	        cubemx_transport_write, cubemx_transport_read);
 769:Core/Src/main.c **** 
 770:Core/Src/main.c **** 	    // Init ROS 2
 771:Core/Src/main.c **** 	    allocator = rcl_get_default_allocator();
 601              		.loc 1 771 6 is_stmt 1 view .LVU136
 602              		.loc 1 771 18 is_stmt 0 view .LVU137
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s 			page 26


 603 001a 3A4F     		ldr	r7, .L32+20
 604 001c 02A8     		add	r0, sp, #8
 605 001e FFF7FEFF 		bl	rcutils_get_default_allocator
 606              	.LVL38:
 607 0022 BE46     		mov	lr, r7
 608 0024 0DF1080C 		add	ip, sp, #8
 609 0028 BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 610 002c AEE80F00 		stmia	lr!, {r0, r1, r2, r3}
 611 0030 DCF80030 		ldr	r3, [ip]
 612 0034 CEF80030 		str	r3, [lr]
 772:Core/Src/main.c **** 	    rclc_support_init(&support, 0, NULL, &allocator);
 613              		.loc 1 772 6 is_stmt 1 view .LVU138
 614 0038 334E     		ldr	r6, .L32+24
 615 003a 3B46     		mov	r3, r7
 616 003c 0022     		movs	r2, #0
 617 003e 1146     		mov	r1, r2
 618 0040 3046     		mov	r0, r6
 619 0042 FFF7FEFF 		bl	rclc_support_init
 620              	.LVL39:
 773:Core/Src/main.c **** 	    rclc_node_init_default(&node, "cubemx_node", "", &support);
 621              		.loc 1 773 6 view .LVU139
 622 0046 314C     		ldr	r4, .L32+28
 623 0048 3346     		mov	r3, r6
 624 004a 314A     		ldr	r2, .L32+32
 625 004c 3149     		ldr	r1, .L32+36
 626 004e 2046     		mov	r0, r4
 627 0050 FFF7FEFF 		bl	rclc_node_init_default
 628              	.LVL40:
 774:Core/Src/main.c **** 
 775:Core/Src/main.c **** 	    //  Initialize the Publisher
 776:Core/Src/main.c **** 	    rclc_publisher_init_default(
 629              		.loc 1 776 6 view .LVU140
 630 0054 FFF7FEFF 		bl	rosidl_typesupport_c__get_message_type_support_handle__geometry_msgs__msg__Vector3
 631              	.LVL41:
 632 0058 0246     		mov	r2, r0
 633 005a 2F4B     		ldr	r3, .L32+40
 634 005c 2146     		mov	r1, r4
 635 005e 2F48     		ldr	r0, .L32+44
 636 0060 FFF7FEFF 		bl	rclc_publisher_init_default
 637              	.LVL42:
 777:Core/Src/main.c **** 	        &pose_publisher,
 778:Core/Src/main.c **** 	        &node,
 779:Core/Src/main.c **** 	        ROSIDL_GET_MSG_TYPE_SUPPORT(geometry_msgs, msg, Vector3),
 780:Core/Src/main.c **** 	        "/pose_topic"
 781:Core/Src/main.c **** 	    );
 782:Core/Src/main.c **** 	    //  Initialize the Subscriber
 783:Core/Src/main.c **** 	        rclc_subscription_init_default(
 638              		.loc 1 783 10 view .LVU141
 639 0064 FFF7FEFF 		bl	rosidl_typesupport_c__get_message_type_support_handle__std_msgs__msg__Bool
 640              	.LVL43:
 641 0068 0246     		mov	r2, r0
 642 006a DFF8E080 		ldr	r8, .L32+92
 643 006e 2C4B     		ldr	r3, .L32+48
 644 0070 2146     		mov	r1, r4
 645 0072 4046     		mov	r0, r8
 646 0074 FFF7FEFF 		bl	rclc_subscription_init_default
 647              	.LVL44:
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s 			page 27


 784:Core/Src/main.c **** 	            &bool_subscriber,
 785:Core/Src/main.c **** 	            &node,
 786:Core/Src/main.c **** 	            ROSIDL_GET_MSG_TYPE_SUPPORT(std_msgs, msg, Bool),
 787:Core/Src/main.c **** 	            "/bool_topic"
 788:Core/Src/main.c **** 	        );
 789:Core/Src/main.c **** 
 790:Core/Src/main.c **** 	    //  initialize the Service
 791:Core/Src/main.c **** 	    const rosidl_message_type_support_t *service_type_support =
 648              		.loc 1 791 6 view .LVU142
 792:Core/Src/main.c **** 	        ROSIDL_TYPESUPPORT_INTERFACE__SERVICE_SYMBOL_NAME(rosidl_typesupport_microxrcedds_c, servi
 649              		.loc 1 792 10 is_stmt 0 view .LVU143
 650 0078 FFF7FEFF 		bl	rosidl_typesupport_microxrcedds_c__get_service_type_support_handle__service__srv__NaviStm
 651              	.LVL45:
 652 007c 0246     		mov	r2, r0
 653              	.LVL46:
 793:Core/Src/main.c **** 	    rclc_service_init_default(&service, &node, service_type_support, "/stm/navi_stm");
 654              		.loc 1 793 6 is_stmt 1 view .LVU144
 655 007e DFF8D090 		ldr	r9, .L32+96
 656 0082 284B     		ldr	r3, .L32+52
 657 0084 2146     		mov	r1, r4
 658 0086 4846     		mov	r0, r9
 659              	.LVL47:
 660              		.loc 1 793 6 is_stmt 0 view .LVU145
 661 0088 FFF7FEFF 		bl	rclc_service_init_default
 662              	.LVL48:
 794:Core/Src/main.c **** 
 795:Core/Src/main.c **** 	    //  executor for handling both service and publisher
 796:Core/Src/main.c **** 	    rclc_executor_init(&executor, &support.context, 15, &allocator);
 663              		.loc 1 796 6 is_stmt 1 view .LVU146
 664 008c 264D     		ldr	r5, .L32+56
 665 008e 3B46     		mov	r3, r7
 666 0090 0F22     		movs	r2, #15
 667 0092 3146     		mov	r1, r6
 668 0094 2846     		mov	r0, r5
 669 0096 FFF7FEFF 		bl	rclc_executor_init
 670              	.LVL49:
 797:Core/Src/main.c **** 	    rclc_executor_add_service(&executor, &service, &request_msg, &response_msg, service_callback);
 671              		.loc 1 797 6 view .LVU147
 672 009a 244B     		ldr	r3, .L32+60
 673 009c 0093     		str	r3, [sp]
 674 009e 244B     		ldr	r3, .L32+64
 675 00a0 244A     		ldr	r2, .L32+68
 676 00a2 4946     		mov	r1, r9
 677 00a4 2846     		mov	r0, r5
 678 00a6 FFF7FEFF 		bl	rclc_executor_add_service
 679              	.LVL50:
 798:Core/Src/main.c **** 	    rclc_executor_add_subscription(&executor, &bool_subscriber, &bool_msg, bool_subscriber_callbac
 680              		.loc 1 798 6 view .LVU148
 681 00aa 0024     		movs	r4, #0
 682 00ac 0094     		str	r4, [sp]
 683 00ae 224B     		ldr	r3, .L32+72
 684 00b0 224A     		ldr	r2, .L32+76
 685 00b2 4146     		mov	r1, r8
 686 00b4 2846     		mov	r0, r5
 687 00b6 FFF7FEFF 		bl	rclc_executor_add_subscription
 688              	.LVL51:
 799:Core/Src/main.c **** 
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s 			page 28


 800:Core/Src/main.c **** 	    const osThreadAttr_t pubTask_attributes = {
 689              		.loc 1 800 6 view .LVU149
 690              		.loc 1 800 27 is_stmt 0 view .LVU150
 691 00ba 2422     		movs	r2, #36
 692 00bc 2146     		mov	r1, r4
 693 00be 0DEB0200 		add	r0, sp, r2
 694 00c2 FFF7FEFF 		bl	memset
 695              	.LVL52:
 696 00c6 1E4B     		ldr	r3, .L32+80
 697 00c8 0993     		str	r3, [sp, #36]
 698 00ca 4FF48063 		mov	r3, #1024
 699 00ce 0E93     		str	r3, [sp, #56]
 700 00d0 1823     		movs	r3, #24
 701 00d2 0F93     		str	r3, [sp, #60]
 801:Core/Src/main.c **** 	        .name = "posePubTask",
 802:Core/Src/main.c **** 	        .stack_size = 256 * 4,  // Adjust if needed
 803:Core/Src/main.c **** 	        .priority = (osPriority_t) osPriorityNormal,
 804:Core/Src/main.c **** 	    };
 805:Core/Src/main.c **** 	    osThreadNew(publisher_task, NULL, &pubTask_attributes);
 702              		.loc 1 805 6 is_stmt 1 view .LVU151
 703 00d4 09AA     		add	r2, sp, #36
 704 00d6 2146     		mov	r1, r4
 705 00d8 1A48     		ldr	r0, .L32+84
 706 00da FFF7FEFF 		bl	osThreadNew
 707              	.LVL53:
 708              	.L30:
 806:Core/Src/main.c **** 
 807:Core/Src/main.c **** 
 808:Core/Src/main.c **** 	    //  Keep ROS 2 Running
 809:Core/Src/main.c ****   /* Infinite loop */
 810:Core/Src/main.c ****   for(;;)
 709              		.loc 1 810 3 discriminator 1 view .LVU152
 710              	.LBB9:
 811:Core/Src/main.c ****   {
 812:Core/Src/main.c **** 	  rcl_ret_t ret = rclc_executor_spin_some(&executor, RCL_MS_TO_NS(10));
 711              		.loc 1 812 4 discriminator 1 view .LVU153
 712              		.loc 1 812 20 is_stmt 0 discriminator 1 view .LVU154
 713 00de 1A4A     		ldr	r2, .L32+88
 714 00e0 0023     		movs	r3, #0
 715 00e2 1148     		ldr	r0, .L32+56
 716 00e4 FFF7FEFF 		bl	rclc_executor_spin_some
 717              	.LVL54:
 813:Core/Src/main.c **** 	 osDelay(1);
 718              		.loc 1 813 3 is_stmt 1 discriminator 1 view .LVU155
 719 00e8 0120     		movs	r0, #1
 720 00ea FFF7FEFF 		bl	osDelay
 721              	.LVL55:
 722              	.LBE9:
 810:Core/Src/main.c ****   {
 723              		.loc 1 810 3 discriminator 1 view .LVU156
 724 00ee F6E7     		b	.L30
 725              	.L33:
 726              		.align	2
 727              	.L32:
 728 00f0 00000000 		.word	cubemx_transport_read
 729 00f4 00000000 		.word	cubemx_transport_write
 730 00f8 00000000 		.word	cubemx_transport_close
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s 			page 29


 731 00fc 00000000 		.word	cubemx_transport_open
 732 0100 00000000 		.word	huart2
 733 0104 00000000 		.word	allocator
 734 0108 00000000 		.word	support
 735 010c 00000000 		.word	node
 736 0110 00000000 		.word	.LC0
 737 0114 04000000 		.word	.LC1
 738 0118 10000000 		.word	.LC2
 739 011c 00000000 		.word	pose_publisher
 740 0120 1C000000 		.word	.LC3
 741 0124 28000000 		.word	.LC4
 742 0128 00000000 		.word	executor
 743 012c 00000000 		.word	service_callback
 744 0130 00000000 		.word	response_msg
 745 0134 00000000 		.word	request_msg
 746 0138 00000000 		.word	bool_subscriber_callback
 747 013c 00000000 		.word	bool_msg
 748 0140 38000000 		.word	.LC5
 749 0144 00000000 		.word	publisher_task
 750 0148 80969800 		.word	10000000
 751 014c 00000000 		.word	bool_subscriber
 752 0150 00000000 		.word	service
 753              		.cfi_endproc
 754              	.LFE155:
 756              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 757              		.align	1
 758              		.global	HAL_TIM_PeriodElapsedCallback
 759              		.syntax unified
 760              		.thumb
 761              		.thumb_func
 763              	HAL_TIM_PeriodElapsedCallback:
 764              	.LVL56:
 765              	.LFB156:
 814:Core/Src/main.c ****   }
 815:Core/Src/main.c ****   /* USER CODE END 5 */
 816:Core/Src/main.c **** }
 817:Core/Src/main.c **** 
 818:Core/Src/main.c **** /**
 819:Core/Src/main.c ****   * @brief  Period elapsed callback in non blocking mode
 820:Core/Src/main.c ****   * @note   This function is called  when TIM2 interrupt took place, inside
 821:Core/Src/main.c ****   * HAL_TIM_IRQHandler(). It makes a direct call to HAL_IncTick() to increment
 822:Core/Src/main.c ****   * a global variable "uwTick" used as application time base.
 823:Core/Src/main.c ****   * @param  htim : TIM handle
 824:Core/Src/main.c ****   * @retval None
 825:Core/Src/main.c ****   */
 826:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 827:Core/Src/main.c **** {
 766              		.loc 1 827 1 view -0
 767              		.cfi_startproc
 768              		@ args = 0, pretend = 0, frame = 0
 769              		@ frame_needed = 0, uses_anonymous_args = 0
 770              		.loc 1 827 1 is_stmt 0 view .LVU158
 771 0000 10B5     		push	{r4, lr}
 772              	.LCFI11:
 773              		.cfi_def_cfa_offset 8
 774              		.cfi_offset 4, -8
 775              		.cfi_offset 14, -4
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s 			page 30


 776 0002 0446     		mov	r4, r0
 828:Core/Src/main.c ****   /* USER CODE BEGIN Callback 0 */
 829:Core/Src/main.c **** 	if (htim-> Instance == TIM7)
 777              		.loc 1 829 2 is_stmt 1 view .LVU159
 778              		.loc 1 829 10 is_stmt 0 view .LVU160
 779 0004 0268     		ldr	r2, [r0]
 780              		.loc 1 829 5 view .LVU161
 781 0006 1E4B     		ldr	r3, .L43
 782 0008 9A42     		cmp	r2, r3
 783 000a 04D0     		beq	.L40
 784              	.LVL57:
 785              	.L35:
 830:Core/Src/main.c **** 	{
 831:Core/Src/main.c **** 		update_position();
 832:Core/Src/main.c **** 		PWM_sign_change_counter();
 833:Core/Src/main.c **** 		if (t%T == 0)
 834:Core/Src/main.c **** 			speed_calcul();
 835:Core/Src/main.c **** 		if(HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_8)==0){mutex_button=0;
 836:Core/Src/main.c **** 		    HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, 0);}
 837:Core/Src/main.c **** 		else if(HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_8)==1){mutex_button=1;
 838:Core/Src/main.c **** 		HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, 1);}
 839:Core/Src/main.c **** 	}
 840:Core/Src/main.c ****   /* USER CODE END Callback 0 */
 841:Core/Src/main.c ****   if (htim->Instance == TIM2) {
 786              		.loc 1 841 3 is_stmt 1 view .LVU162
 787              		.loc 1 841 11 is_stmt 0 view .LVU163
 788 000c 2368     		ldr	r3, [r4]
 789              		.loc 1 841 6 view .LVU164
 790 000e B3F1804F 		cmp	r3, #1073741824
 791 0012 31D0     		beq	.L41
 792              	.L34:
 842:Core/Src/main.c ****     HAL_IncTick();
 843:Core/Src/main.c ****   }
 844:Core/Src/main.c ****   /* USER CODE BEGIN Callback 1 */
 845:Core/Src/main.c **** 
 846:Core/Src/main.c ****   /* USER CODE END Callback 1 */
 847:Core/Src/main.c **** }
 793              		.loc 1 847 1 view .LVU165
 794 0014 10BD     		pop	{r4, pc}
 795              	.LVL58:
 796              	.L40:
 831:Core/Src/main.c **** 		PWM_sign_change_counter();
 797              		.loc 1 831 3 is_stmt 1 view .LVU166
 798 0016 FFF7FEFF 		bl	update_position
 799              	.LVL59:
 832:Core/Src/main.c **** 		if (t%T == 0)
 800              		.loc 1 832 3 view .LVU167
 801 001a FFF7FEFF 		bl	PWM_sign_change_counter
 802              	.LVL60:
 833:Core/Src/main.c **** 			speed_calcul();
 803              		.loc 1 833 3 view .LVU168
 833:Core/Src/main.c **** 			speed_calcul();
 804              		.loc 1 833 8 is_stmt 0 view .LVU169
 805 001e 194B     		ldr	r3, .L43+4
 806 0020 1A68     		ldr	r2, [r3]
 807 0022 1949     		ldr	r1, .L43+8
 808 0024 81FB0231 		smull	r3, r1, r1, r2
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s 			page 31


 809 0028 D317     		asrs	r3, r2, #31
 810 002a C3EBA103 		rsb	r3, r3, r1, asr #2
 811 002e 03EB8303 		add	r3, r3, r3, lsl #2
 833:Core/Src/main.c **** 			speed_calcul();
 812              		.loc 1 833 6 view .LVU170
 813 0032 B2EB430F 		cmp	r2, r3, lsl #1
 814 0036 0DD0     		beq	.L42
 815              	.L36:
 835:Core/Src/main.c **** 		    HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, 0);}
 816              		.loc 1 835 3 is_stmt 1 view .LVU171
 835:Core/Src/main.c **** 		    HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, 0);}
 817              		.loc 1 835 6 is_stmt 0 view .LVU172
 818 0038 4FF48071 		mov	r1, #256
 819 003c 1348     		ldr	r0, .L43+12
 820 003e FFF7FEFF 		bl	HAL_GPIO_ReadPin
 821              	.LVL61:
 835:Core/Src/main.c **** 		    HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, 0);}
 822              		.loc 1 835 5 view .LVU173
 823 0042 50B9     		cbnz	r0, .L37
 835:Core/Src/main.c **** 		    HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, 0);}
 824              		.loc 1 835 46 is_stmt 1 discriminator 1 view .LVU174
 835:Core/Src/main.c **** 		    HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, 0);}
 825              		.loc 1 835 58 is_stmt 0 discriminator 1 view .LVU175
 826 0044 0022     		movs	r2, #0
 827 0046 124B     		ldr	r3, .L43+16
 828 0048 1A60     		str	r2, [r3]
 836:Core/Src/main.c **** 		else if(HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_8)==1){mutex_button=1;
 829              		.loc 1 836 7 is_stmt 1 discriminator 1 view .LVU176
 830 004a 2021     		movs	r1, #32
 831 004c 1148     		ldr	r0, .L43+20
 832 004e FFF7FEFF 		bl	HAL_GPIO_WritePin
 833              	.LVL62:
 834 0052 DBE7     		b	.L35
 835              	.L42:
 834:Core/Src/main.c **** 		if(HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_8)==0){mutex_button=0;
 836              		.loc 1 834 4 view .LVU177
 837 0054 FFF7FEFF 		bl	speed_calcul
 838              	.LVL63:
 839 0058 EEE7     		b	.L36
 840              	.L37:
 837:Core/Src/main.c **** 		HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, 1);}
 841              		.loc 1 837 8 view .LVU178
 837:Core/Src/main.c **** 		HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, 1);}
 842              		.loc 1 837 11 is_stmt 0 view .LVU179
 843 005a 4FF48071 		mov	r1, #256
 844 005e 0B48     		ldr	r0, .L43+12
 845 0060 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 846              	.LVL64:
 837:Core/Src/main.c **** 		HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, 1);}
 847              		.loc 1 837 10 view .LVU180
 848 0064 0128     		cmp	r0, #1
 849 0066 D1D1     		bne	.L35
 837:Core/Src/main.c **** 		HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, 1);}
 850              		.loc 1 837 51 is_stmt 1 discriminator 1 view .LVU181
 837:Core/Src/main.c **** 		HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, 1);}
 851              		.loc 1 837 63 is_stmt 0 discriminator 1 view .LVU182
 852 0068 0122     		movs	r2, #1
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s 			page 32


 853 006a 094B     		ldr	r3, .L43+16
 854 006c 1A60     		str	r2, [r3]
 838:Core/Src/main.c **** 	}
 855              		.loc 1 838 3 is_stmt 1 discriminator 1 view .LVU183
 856 006e 2021     		movs	r1, #32
 857 0070 0848     		ldr	r0, .L43+20
 858 0072 FFF7FEFF 		bl	HAL_GPIO_WritePin
 859              	.LVL65:
 860 0076 C9E7     		b	.L35
 861              	.L41:
 842:Core/Src/main.c ****   }
 862              		.loc 1 842 5 view .LVU184
 863 0078 FFF7FEFF 		bl	HAL_IncTick
 864              	.LVL66:
 865              		.loc 1 847 1 is_stmt 0 view .LVU185
 866 007c CAE7     		b	.L34
 867              	.L44:
 868 007e 00BF     		.align	2
 869              	.L43:
 870 0080 00140040 		.word	1073746944
 871 0084 00000000 		.word	t
 872 0088 67666666 		.word	1717986919
 873 008c 00040240 		.word	1073873920
 874 0090 00000000 		.word	mutex_button
 875 0094 00000240 		.word	1073872896
 876              		.cfi_endproc
 877              	.LFE156:
 879              		.section	.text.Error_Handler,"ax",%progbits
 880              		.align	1
 881              		.global	Error_Handler
 882              		.syntax unified
 883              		.thumb
 884              		.thumb_func
 886              	Error_Handler:
 887              	.LFB157:
 848:Core/Src/main.c **** 
 849:Core/Src/main.c **** /**
 850:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 851:Core/Src/main.c ****   * @retval None
 852:Core/Src/main.c ****   */
 853:Core/Src/main.c **** void Error_Handler(void)
 854:Core/Src/main.c **** {
 888              		.loc 1 854 1 is_stmt 1 view -0
 889              		.cfi_startproc
 890              		@ Volatile: function does not return.
 891              		@ args = 0, pretend = 0, frame = 0
 892              		@ frame_needed = 0, uses_anonymous_args = 0
 893              		@ link register save eliminated.
 855:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 856:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 857:Core/Src/main.c ****   __disable_irq();
 894              		.loc 1 857 3 view .LVU187
 895              	.LBB10:
 896              	.LBI10:
 897              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s 			page 33


   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.4.1
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     27. May 2021
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2021 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s 			page 34


  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s 			page 35


 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s 			page 36


 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute__((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_SEAL
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_SEAL              __StackSeal
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 189:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_SIZE
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_SIZE      8U
 192:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_VALUE
 195:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_VALUE     0xFEF5EDA5FEF5EDA5ULL
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_STACKSEAL_S (uint32_t* stackTop) {
 200:Drivers/CMSIS/Include/cmsis_gcc.h ****   *((uint64_t *)stackTop) = __TZ_STACK_SEAL_VALUE;
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 203:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 204:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 208:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 209:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 212:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 213:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 215:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 216:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 217:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 223:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 225:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 226:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 227:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 229:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 230:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s 			page 37


 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 233:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi":::"memory")
 235:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 239:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 240:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 241:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe":::"memory")
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 244:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 245:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 248:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 253:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 254:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 255:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 256:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 257:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 258:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 259:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 265:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 268:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 273:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 274:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 277:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 278:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 279:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 283:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 284:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 285:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s 			page 38


 288:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 289:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 295:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 296:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 298:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 300:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 307:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 308:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 309:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 311:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 312:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 315:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 316:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 318:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 322:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 323:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 324:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 327:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 328:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 343:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 344:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s 			page 39


 345:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 348:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
 349:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
 350:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 351:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 354:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 355:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 359:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 361:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 362:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 363:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 366:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 367:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 369:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 371:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 375:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 378:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 381:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 388:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
 389:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
 390:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 391:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 394:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 395:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 396:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 398:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s 			page 40


 402:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 405:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
 407:Drivers/CMSIS/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
 410:Drivers/CMSIS/Include/cmsis_gcc.h ****      is non-zero".
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****      single CLZ instruction.
 413:Drivers/CMSIS/Include/cmsis_gcc.h ****    */
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (value == 0U)
 415:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****     return 32U;
 417:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 418:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_clz(value);
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 420:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 421:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 422:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 424:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 426:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 427:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
 428:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
 429:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 430:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 431:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDREXB(volatile uint8_t *addr)
 433:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 434:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 435:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 436:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 437:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
 438:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 439:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 440:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 441:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 442:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 444:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 445:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 446:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 447:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 448:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 449:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
 450:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
 451:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 452:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDREXH(volatile uint16_t *addr)
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 456:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 457:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s 			page 41


 459:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
 460:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 461:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 462:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 464:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 465:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 468:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 471:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
 472:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 486:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 491:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 492:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 493:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *addr)
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 495:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 498:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 499:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 500:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 501:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 502:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 503:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
 504:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 506:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 507:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 508:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 509:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXH(uint16_t value, volatile uint16_t *addr)
 511:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 513:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s 			page 42


 516:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 519:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 520:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
 521:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
 522:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 527:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 529:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 530:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 533:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 537:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Remove the exclusive lock
 538:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Removes the exclusive lock which is created by LDREX.
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 540:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __CLREX(void)
 541:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 542:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("clrex" ::: "memory");
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 544:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 545:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 546:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 548:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 552:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 553:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 554:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 557:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 558:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (1..32)
 559:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 560:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SSAT(ARG1, ARG2) \
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 564:Drivers/CMSIS/Include/cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
 565:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("ssat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 568:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 569:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 571:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 572:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s 			page 43


 573:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 574:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (0..31)
 575:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 576:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 577:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __USAT(ARG1, ARG2) \
 578:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 579:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 580:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("usat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 582:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 583:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 584:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 585:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 586:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 587:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right with Extend (32 bit)
 588:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Moves each bit of a bitstring right by one bit.
 589:Drivers/CMSIS/Include/cmsis_gcc.h ****            The carry input is shifted in at the left end of the bitstring.
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to rotate
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 592:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 593:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RRX(uint32_t value)
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 595:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 596:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 597:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rrx %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 598:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 599:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 600:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 601:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 603:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (8 bit)
 604:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 8 bit value.
 605:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 606:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 608:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDRBT(volatile uint8_t *ptr)
 609:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 610:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 611:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 612:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, %1" : "=r" (result) : "Q" (*ptr) );
 614:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 615:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 616:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 617:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 618:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 621:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 622:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 623:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 625:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (16 bit)
 626:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 16 bit values.
 627:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 628:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 629:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s 			page 44


 630:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDRHT(volatile uint16_t *ptr)
 631:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 633:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 634:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, %1" : "=r" (result) : "Q" (*ptr) );
 636:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 637:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 638:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 639:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 640:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 641:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 642:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 643:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 644:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 647:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (32 bit)
 648:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 32 bit values.
 649:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 650:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 652:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDRT(volatile uint32_t *ptr)
 653:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 654:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 655:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrt %0, %1" : "=r" (result) : "Q" (*ptr) );
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 658:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 661:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (8 bit)
 663:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 8 bit values.
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 665:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 666:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 667:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRBT(uint8_t value, volatile uint8_t *ptr)
 668:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 669:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strbt %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 671:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 672:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 673:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (16 bit)
 675:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 16 bit values.
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 677:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 679:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRHT(uint16_t value, volatile uint16_t *ptr)
 680:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 681:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strht %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 682:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 683:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 684:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 685:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 686:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (32 bit)
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s 			page 45


 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 32 bit values.
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 689:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 690:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRT(uint32_t value, volatile uint32_t *ptr)
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 693:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strt %1, %0" : "=Q" (*ptr) : "r" (value) );
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 695:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 696:Drivers/CMSIS/Include/cmsis_gcc.h **** #else  /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 698:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 699:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 700:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 702:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 703:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 704:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (1..32)
 705:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 706:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 707:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int32_t __SSAT(int32_t val, uint32_t sat)
 708:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   if ((sat >= 1U) && (sat <= 32U))
 710:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 711:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t max = (int32_t)((1U << (sat - 1U)) - 1U);
 712:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t min = -1 - max ;
 713:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > max)
 714:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 715:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 716:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 717:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < min)
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****       return min;
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 721:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   return val;
 723:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 724:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 726:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 727:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (0..31)
 730:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 731:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 732:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USAT(int32_t val, uint32_t sat)
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 734:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (sat <= 31U)
 735:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 736:Drivers/CMSIS/Include/cmsis_gcc.h ****     const uint32_t max = ((1U << sat) - 1U);
 737:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > (int32_t)max)
 738:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < 0)
 742:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****       return 0U;
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s 			page 46


 744:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 746:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (uint32_t)val;
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 749:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 751:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 752:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 753:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 754:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 755:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 757:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (8 bit)
 758:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB instruction for 8 bit value.
 759:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 760:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 761:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 762:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAB(volatile uint8_t *ptr)
 763:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 765:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 766:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldab %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 767:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 768:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 769:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 772:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (16 bit)
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH instruction for 16 bit values.
 774:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 775:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 777:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAH(volatile uint16_t *ptr)
 778:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 779:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 781:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldah %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 782:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 784:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 785:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 786:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 787:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (32 bit)
 788:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA instruction for 32 bit values.
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDA(volatile uint32_t *ptr)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 795:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 796:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("lda %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 797:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 799:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 800:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s 			page 47


 801:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 802:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (8 bit)
 803:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB instruction for 8 bit values.
 804:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 805:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 806:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 807:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLB(uint8_t value, volatile uint8_t *ptr)
 808:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 809:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlb %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 810:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 811:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 812:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 814:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (16 bit)
 815:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH instruction for 16 bit values.
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 817:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 818:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 819:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLH(uint16_t value, volatile uint16_t *ptr)
 820:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 821:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlh %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 825:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 826:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (32 bit)
 827:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL instruction for 32 bit values.
 828:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 829:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 830:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 831:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STL(uint32_t value, volatile uint32_t *ptr)
 832:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 833:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stl %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 834:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 835:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 836:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 838:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (8 bit)
 839:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB exclusive instruction for 8 bit value.
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 842:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 843:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAEXB(volatile uint8_t *ptr)
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 845:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 846:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 847:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexb %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 848:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 849:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 853:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (16 bit)
 854:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH exclusive instruction for 16 bit values.
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 857:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s 			page 48


 858:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAEXH(volatile uint16_t *ptr)
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 860:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 861:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexh %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 863:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 864:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 865:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 867:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 868:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (32 bit)
 869:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA exclusive instruction for 32 bit values.
 870:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 871:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 872:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 873:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDAEX(volatile uint32_t *ptr)
 874:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 875:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 876:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 877:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaex %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 878:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 879:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 882:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 883:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (8 bit)
 884:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB exclusive instruction for 8 bit values.
 885:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 886:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 888:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 889:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 890:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXB(uint8_t value, volatile uint8_t *ptr)
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 892:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 894:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexb %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 895:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 896:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 897:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 898:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 899:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 900:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (16 bit)
 901:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH exclusive instruction for 16 bit values.
 902:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 903:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 904:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 905:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 906:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 907:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXH(uint16_t value, volatile uint16_t *ptr)
 908:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 909:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 911:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexh %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 912:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 913:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 914:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s 			page 49


 915:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 916:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 917:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (32 bit)
 918:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL exclusive instruction for 32 bit values.
 919:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 920:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 922:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 924:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEX(uint32_t value, volatile uint32_t *ptr)
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 926:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 928:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlex %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "memo
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 930:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 931:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 932:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 933:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 935:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@}*/ /* end of group CMSIS_Core_InstructionInterface */
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 937:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 939:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 940:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 943:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 945:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 946:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing special-purpose register PRIMASK.
 947:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 948:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 949:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 950:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 952:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 953:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 954:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 956:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
 958:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 959:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 960:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 898              		.loc 2 960 27 view .LVU188
 899              	.LBB11:
 961:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 962:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 900              		.loc 2 962 3 view .LVU189
 901              		.syntax unified
 902              	@ 962 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 903 0000 72B6     		cpsid i
 904              	@ 0 "" 2
 905              		.thumb
 906              		.syntax unified
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s 			page 50


 907              	.L46:
 908              	.LBE11:
 909              	.LBE10:
 858:Core/Src/main.c ****   while (1)
 910              		.loc 1 858 3 discriminator 1 view .LVU190
 859:Core/Src/main.c ****   {
 860:Core/Src/main.c ****   }
 911              		.loc 1 860 3 discriminator 1 view .LVU191
 858:Core/Src/main.c ****   while (1)
 912              		.loc 1 858 9 discriminator 1 view .LVU192
 913 0002 FEE7     		b	.L46
 914              		.cfi_endproc
 915              	.LFE157:
 917              		.section	.text.MX_TIM1_Init,"ax",%progbits
 918              		.align	1
 919              		.syntax unified
 920              		.thumb
 921              		.thumb_func
 923              	MX_TIM1_Init:
 924              	.LFB147:
 408:Core/Src/main.c **** 
 925              		.loc 1 408 1 view -0
 926              		.cfi_startproc
 927              		@ args = 0, pretend = 0, frame = 72
 928              		@ frame_needed = 0, uses_anonymous_args = 0
 929 0000 10B5     		push	{r4, lr}
 930              	.LCFI12:
 931              		.cfi_def_cfa_offset 8
 932              		.cfi_offset 4, -8
 933              		.cfi_offset 14, -4
 934 0002 92B0     		sub	sp, sp, #72
 935              	.LCFI13:
 936              		.cfi_def_cfa_offset 80
 414:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 937              		.loc 1 414 3 view .LVU194
 414:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 938              		.loc 1 414 27 is_stmt 0 view .LVU195
 939 0004 0024     		movs	r4, #0
 940 0006 1094     		str	r4, [sp, #64]
 941 0008 1194     		str	r4, [sp, #68]
 415:Core/Src/main.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 942              		.loc 1 415 3 is_stmt 1 view .LVU196
 415:Core/Src/main.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 943              		.loc 1 415 22 is_stmt 0 view .LVU197
 944 000a 0994     		str	r4, [sp, #36]
 945 000c 0A94     		str	r4, [sp, #40]
 946 000e 0B94     		str	r4, [sp, #44]
 947 0010 0C94     		str	r4, [sp, #48]
 948 0012 0D94     		str	r4, [sp, #52]
 949 0014 0E94     		str	r4, [sp, #56]
 950 0016 0F94     		str	r4, [sp, #60]
 416:Core/Src/main.c **** 
 951              		.loc 1 416 3 is_stmt 1 view .LVU198
 416:Core/Src/main.c **** 
 952              		.loc 1 416 34 is_stmt 0 view .LVU199
 953 0018 2022     		movs	r2, #32
 954 001a 2146     		mov	r1, r4
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s 			page 51


 955 001c 01A8     		add	r0, sp, #4
 956 001e FFF7FEFF 		bl	memset
 957              	.LVL67:
 421:Core/Src/main.c ****   htim1.Init.Prescaler = 0;
 958              		.loc 1 421 3 is_stmt 1 view .LVU200
 421:Core/Src/main.c ****   htim1.Init.Prescaler = 0;
 959              		.loc 1 421 18 is_stmt 0 view .LVU201
 960 0022 2D48     		ldr	r0, .L63
 961 0024 2D4B     		ldr	r3, .L63+4
 962 0026 0360     		str	r3, [r0]
 422:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 963              		.loc 1 422 3 is_stmt 1 view .LVU202
 422:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 964              		.loc 1 422 24 is_stmt 0 view .LVU203
 965 0028 4460     		str	r4, [r0, #4]
 423:Core/Src/main.c ****   htim1.Init.Period = 4500;
 966              		.loc 1 423 3 is_stmt 1 view .LVU204
 423:Core/Src/main.c ****   htim1.Init.Period = 4500;
 967              		.loc 1 423 26 is_stmt 0 view .LVU205
 968 002a 8460     		str	r4, [r0, #8]
 424:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 969              		.loc 1 424 3 is_stmt 1 view .LVU206
 424:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 970              		.loc 1 424 21 is_stmt 0 view .LVU207
 971 002c 41F29413 		movw	r3, #4500
 972 0030 C360     		str	r3, [r0, #12]
 425:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 973              		.loc 1 425 3 is_stmt 1 view .LVU208
 425:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 974              		.loc 1 425 28 is_stmt 0 view .LVU209
 975 0032 0461     		str	r4, [r0, #16]
 426:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 976              		.loc 1 426 3 is_stmt 1 view .LVU210
 426:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 977              		.loc 1 426 32 is_stmt 0 view .LVU211
 978 0034 4461     		str	r4, [r0, #20]
 427:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim1) != HAL_OK)
 979              		.loc 1 427 3 is_stmt 1 view .LVU212
 427:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim1) != HAL_OK)
 980              		.loc 1 427 32 is_stmt 0 view .LVU213
 981 0036 8461     		str	r4, [r0, #24]
 428:Core/Src/main.c ****   {
 982              		.loc 1 428 3 is_stmt 1 view .LVU214
 428:Core/Src/main.c ****   {
 983              		.loc 1 428 7 is_stmt 0 view .LVU215
 984 0038 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 985              	.LVL68:
 428:Core/Src/main.c ****   {
 986              		.loc 1 428 6 view .LVU216
 987 003c 0028     		cmp	r0, #0
 988 003e 3CD1     		bne	.L56
 432:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 989              		.loc 1 432 3 is_stmt 1 view .LVU217
 432:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 990              		.loc 1 432 37 is_stmt 0 view .LVU218
 991 0040 0023     		movs	r3, #0
 992 0042 1093     		str	r3, [sp, #64]
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s 			page 52


 433:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 993              		.loc 1 433 3 is_stmt 1 view .LVU219
 433:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 994              		.loc 1 433 33 is_stmt 0 view .LVU220
 995 0044 1193     		str	r3, [sp, #68]
 434:Core/Src/main.c ****   {
 996              		.loc 1 434 3 is_stmt 1 view .LVU221
 434:Core/Src/main.c ****   {
 997              		.loc 1 434 7 is_stmt 0 view .LVU222
 998 0046 10A9     		add	r1, sp, #64
 999 0048 2348     		ldr	r0, .L63
 1000 004a FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 1001              	.LVL69:
 434:Core/Src/main.c ****   {
 1002              		.loc 1 434 6 view .LVU223
 1003 004e 0028     		cmp	r0, #0
 1004 0050 35D1     		bne	.L57
 438:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 1005              		.loc 1 438 3 is_stmt 1 view .LVU224
 438:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 1006              		.loc 1 438 20 is_stmt 0 view .LVU225
 1007 0052 6023     		movs	r3, #96
 1008 0054 0993     		str	r3, [sp, #36]
 439:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 1009              		.loc 1 439 3 is_stmt 1 view .LVU226
 439:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 1010              		.loc 1 439 19 is_stmt 0 view .LVU227
 1011 0056 0022     		movs	r2, #0
 1012 0058 0A92     		str	r2, [sp, #40]
 440:Core/Src/main.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 1013              		.loc 1 440 3 is_stmt 1 view .LVU228
 440:Core/Src/main.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 1014              		.loc 1 440 24 is_stmt 0 view .LVU229
 1015 005a 0B92     		str	r2, [sp, #44]
 441:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 1016              		.loc 1 441 3 is_stmt 1 view .LVU230
 441:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 1017              		.loc 1 441 25 is_stmt 0 view .LVU231
 1018 005c 0C92     		str	r2, [sp, #48]
 442:Core/Src/main.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 1019              		.loc 1 442 3 is_stmt 1 view .LVU232
 442:Core/Src/main.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 1020              		.loc 1 442 24 is_stmt 0 view .LVU233
 1021 005e 0D92     		str	r2, [sp, #52]
 443:Core/Src/main.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 1022              		.loc 1 443 3 is_stmt 1 view .LVU234
 443:Core/Src/main.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 1023              		.loc 1 443 25 is_stmt 0 view .LVU235
 1024 0060 0E92     		str	r2, [sp, #56]
 444:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 1025              		.loc 1 444 3 is_stmt 1 view .LVU236
 444:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 1026              		.loc 1 444 26 is_stmt 0 view .LVU237
 1027 0062 0F92     		str	r2, [sp, #60]
 445:Core/Src/main.c ****   {
 1028              		.loc 1 445 3 is_stmt 1 view .LVU238
 445:Core/Src/main.c ****   {
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s 			page 53


 1029              		.loc 1 445 7 is_stmt 0 view .LVU239
 1030 0064 09A9     		add	r1, sp, #36
 1031 0066 1C48     		ldr	r0, .L63
 1032 0068 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 1033              	.LVL70:
 445:Core/Src/main.c ****   {
 1034              		.loc 1 445 6 view .LVU240
 1035 006c 48BB     		cbnz	r0, .L58
 449:Core/Src/main.c ****   {
 1036              		.loc 1 449 3 is_stmt 1 view .LVU241
 449:Core/Src/main.c ****   {
 1037              		.loc 1 449 7 is_stmt 0 view .LVU242
 1038 006e 0422     		movs	r2, #4
 1039 0070 09A9     		add	r1, sp, #36
 1040 0072 1948     		ldr	r0, .L63
 1041 0074 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 1042              	.LVL71:
 449:Core/Src/main.c ****   {
 1043              		.loc 1 449 6 view .LVU243
 1044 0078 28BB     		cbnz	r0, .L59
 453:Core/Src/main.c ****   {
 1045              		.loc 1 453 3 is_stmt 1 view .LVU244
 453:Core/Src/main.c ****   {
 1046              		.loc 1 453 7 is_stmt 0 view .LVU245
 1047 007a 0822     		movs	r2, #8
 1048 007c 09A9     		add	r1, sp, #36
 1049 007e 1648     		ldr	r0, .L63
 1050 0080 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 1051              	.LVL72:
 453:Core/Src/main.c ****   {
 1052              		.loc 1 453 6 view .LVU246
 1053 0084 08BB     		cbnz	r0, .L60
 457:Core/Src/main.c ****   {
 1054              		.loc 1 457 3 is_stmt 1 view .LVU247
 457:Core/Src/main.c ****   {
 1055              		.loc 1 457 7 is_stmt 0 view .LVU248
 1056 0086 0C22     		movs	r2, #12
 1057 0088 09A9     		add	r1, sp, #36
 1058 008a 1348     		ldr	r0, .L63
 1059 008c FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 1060              	.LVL73:
 457:Core/Src/main.c ****   {
 1061              		.loc 1 457 6 view .LVU249
 1062 0090 E8B9     		cbnz	r0, .L61
 461:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 1063              		.loc 1 461 3 is_stmt 1 view .LVU250
 461:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 1064              		.loc 1 461 40 is_stmt 0 view .LVU251
 1065 0092 0023     		movs	r3, #0
 1066 0094 0193     		str	r3, [sp, #4]
 462:Core/Src/main.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 1067              		.loc 1 462 3 is_stmt 1 view .LVU252
 462:Core/Src/main.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 1068              		.loc 1 462 41 is_stmt 0 view .LVU253
 1069 0096 0293     		str	r3, [sp, #8]
 463:Core/Src/main.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 1070              		.loc 1 463 3 is_stmt 1 view .LVU254
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s 			page 54


 463:Core/Src/main.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 1071              		.loc 1 463 34 is_stmt 0 view .LVU255
 1072 0098 0393     		str	r3, [sp, #12]
 464:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 1073              		.loc 1 464 3 is_stmt 1 view .LVU256
 464:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 1074              		.loc 1 464 33 is_stmt 0 view .LVU257
 1075 009a 0493     		str	r3, [sp, #16]
 465:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 1076              		.loc 1 465 3 is_stmt 1 view .LVU258
 465:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 1077              		.loc 1 465 35 is_stmt 0 view .LVU259
 1078 009c 0593     		str	r3, [sp, #20]
 466:Core/Src/main.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 1079              		.loc 1 466 3 is_stmt 1 view .LVU260
 466:Core/Src/main.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 1080              		.loc 1 466 38 is_stmt 0 view .LVU261
 1081 009e 4FF40052 		mov	r2, #8192
 1082 00a2 0692     		str	r2, [sp, #24]
 467:Core/Src/main.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 1083              		.loc 1 467 3 is_stmt 1 view .LVU262
 467:Core/Src/main.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 1084              		.loc 1 467 40 is_stmt 0 view .LVU263
 1085 00a4 0893     		str	r3, [sp, #32]
 468:Core/Src/main.c ****   {
 1086              		.loc 1 468 3 is_stmt 1 view .LVU264
 468:Core/Src/main.c ****   {
 1087              		.loc 1 468 7 is_stmt 0 view .LVU265
 1088 00a6 01A9     		add	r1, sp, #4
 1089 00a8 0B48     		ldr	r0, .L63
 1090 00aa FFF7FEFF 		bl	HAL_TIMEx_ConfigBreakDeadTime
 1091              	.LVL74:
 468:Core/Src/main.c ****   {
 1092              		.loc 1 468 6 view .LVU266
 1093 00ae 80B9     		cbnz	r0, .L62
 475:Core/Src/main.c **** 
 1094              		.loc 1 475 3 is_stmt 1 view .LVU267
 1095 00b0 0948     		ldr	r0, .L63
 1096 00b2 FFF7FEFF 		bl	HAL_TIM_MspPostInit
 1097              	.LVL75:
 477:Core/Src/main.c **** 
 1098              		.loc 1 477 1 is_stmt 0 view .LVU268
 1099 00b6 12B0     		add	sp, sp, #72
 1100              	.LCFI14:
 1101              		.cfi_remember_state
 1102              		.cfi_def_cfa_offset 8
 1103              		@ sp needed
 1104 00b8 10BD     		pop	{r4, pc}
 1105              	.L56:
 1106              	.LCFI15:
 1107              		.cfi_restore_state
 430:Core/Src/main.c ****   }
 1108              		.loc 1 430 5 is_stmt 1 view .LVU269
 1109 00ba FFF7FEFF 		bl	Error_Handler
 1110              	.LVL76:
 1111              	.L57:
 436:Core/Src/main.c ****   }
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s 			page 55


 1112              		.loc 1 436 5 view .LVU270
 1113 00be FFF7FEFF 		bl	Error_Handler
 1114              	.LVL77:
 1115              	.L58:
 447:Core/Src/main.c ****   }
 1116              		.loc 1 447 5 view .LVU271
 1117 00c2 FFF7FEFF 		bl	Error_Handler
 1118              	.LVL78:
 1119              	.L59:
 451:Core/Src/main.c ****   }
 1120              		.loc 1 451 5 view .LVU272
 1121 00c6 FFF7FEFF 		bl	Error_Handler
 1122              	.LVL79:
 1123              	.L60:
 455:Core/Src/main.c ****   }
 1124              		.loc 1 455 5 view .LVU273
 1125 00ca FFF7FEFF 		bl	Error_Handler
 1126              	.LVL80:
 1127              	.L61:
 459:Core/Src/main.c ****   }
 1128              		.loc 1 459 5 view .LVU274
 1129 00ce FFF7FEFF 		bl	Error_Handler
 1130              	.LVL81:
 1131              	.L62:
 470:Core/Src/main.c ****   }
 1132              		.loc 1 470 5 view .LVU275
 1133 00d2 FFF7FEFF 		bl	Error_Handler
 1134              	.LVL82:
 1135              	.L64:
 1136 00d6 00BF     		.align	2
 1137              	.L63:
 1138 00d8 00000000 		.word	htim1
 1139 00dc 00000140 		.word	1073807360
 1140              		.cfi_endproc
 1141              	.LFE147:
 1143              		.section	.text.MX_TIM3_Init,"ax",%progbits
 1144              		.align	1
 1145              		.syntax unified
 1146              		.thumb
 1147              		.thumb_func
 1149              	MX_TIM3_Init:
 1150              	.LFB148:
 485:Core/Src/main.c **** 
 1151              		.loc 1 485 1 view -0
 1152              		.cfi_startproc
 1153              		@ args = 0, pretend = 0, frame = 48
 1154              		@ frame_needed = 0, uses_anonymous_args = 0
 1155 0000 00B5     		push	{lr}
 1156              	.LCFI16:
 1157              		.cfi_def_cfa_offset 4
 1158              		.cfi_offset 14, -4
 1159 0002 8DB0     		sub	sp, sp, #52
 1160              	.LCFI17:
 1161              		.cfi_def_cfa_offset 56
 491:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 1162              		.loc 1 491 3 view .LVU277
 491:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s 			page 56


 1163              		.loc 1 491 27 is_stmt 0 view .LVU278
 1164 0004 2422     		movs	r2, #36
 1165 0006 0021     		movs	r1, #0
 1166 0008 03A8     		add	r0, sp, #12
 1167 000a FFF7FEFF 		bl	memset
 1168              	.LVL83:
 492:Core/Src/main.c **** 
 1169              		.loc 1 492 3 is_stmt 1 view .LVU279
 492:Core/Src/main.c **** 
 1170              		.loc 1 492 27 is_stmt 0 view .LVU280
 1171 000e 0023     		movs	r3, #0
 1172 0010 0193     		str	r3, [sp, #4]
 1173 0012 0293     		str	r3, [sp, #8]
 497:Core/Src/main.c ****   htim3.Init.Prescaler = 0;
 1174              		.loc 1 497 3 is_stmt 1 view .LVU281
 497:Core/Src/main.c ****   htim3.Init.Prescaler = 0;
 1175              		.loc 1 497 18 is_stmt 0 view .LVU282
 1176 0014 1048     		ldr	r0, .L71
 1177 0016 114A     		ldr	r2, .L71+4
 1178 0018 0260     		str	r2, [r0]
 498:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 1179              		.loc 1 498 3 is_stmt 1 view .LVU283
 498:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 1180              		.loc 1 498 24 is_stmt 0 view .LVU284
 1181 001a 4360     		str	r3, [r0, #4]
 499:Core/Src/main.c ****   htim3.Init.Period = 65535;
 1182              		.loc 1 499 3 is_stmt 1 view .LVU285
 499:Core/Src/main.c ****   htim3.Init.Period = 65535;
 1183              		.loc 1 499 26 is_stmt 0 view .LVU286
 1184 001c 8360     		str	r3, [r0, #8]
 500:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1185              		.loc 1 500 3 is_stmt 1 view .LVU287
 500:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1186              		.loc 1 500 21 is_stmt 0 view .LVU288
 1187 001e 4FF6FF72 		movw	r2, #65535
 1188 0022 C260     		str	r2, [r0, #12]
 501:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1189              		.loc 1 501 3 is_stmt 1 view .LVU289
 501:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1190              		.loc 1 501 28 is_stmt 0 view .LVU290
 1191 0024 0361     		str	r3, [r0, #16]
 502:Core/Src/main.c ****   sConfig.EncoderMode = TIM_ENCODERMODE_TI12;
 1192              		.loc 1 502 3 is_stmt 1 view .LVU291
 502:Core/Src/main.c ****   sConfig.EncoderMode = TIM_ENCODERMODE_TI12;
 1193              		.loc 1 502 32 is_stmt 0 view .LVU292
 1194 0026 8361     		str	r3, [r0, #24]
 503:Core/Src/main.c ****   sConfig.IC1Polarity = TIM_ICPOLARITY_RISING;
 1195              		.loc 1 503 3 is_stmt 1 view .LVU293
 503:Core/Src/main.c ****   sConfig.IC1Polarity = TIM_ICPOLARITY_RISING;
 1196              		.loc 1 503 23 is_stmt 0 view .LVU294
 1197 0028 0323     		movs	r3, #3
 1198 002a 0393     		str	r3, [sp, #12]
 504:Core/Src/main.c ****   sConfig.IC1Selection = TIM_ICSELECTION_DIRECTTI;
 1199              		.loc 1 504 3 is_stmt 1 view .LVU295
 505:Core/Src/main.c ****   sConfig.IC1Prescaler = TIM_ICPSC_DIV1;
 1200              		.loc 1 505 3 view .LVU296
 505:Core/Src/main.c ****   sConfig.IC1Prescaler = TIM_ICPSC_DIV1;
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s 			page 57


 1201              		.loc 1 505 24 is_stmt 0 view .LVU297
 1202 002c 0123     		movs	r3, #1
 1203 002e 0593     		str	r3, [sp, #20]
 506:Core/Src/main.c ****   sConfig.IC1Filter = 0;
 1204              		.loc 1 506 3 is_stmt 1 view .LVU298
 507:Core/Src/main.c ****   sConfig.IC2Polarity = TIM_ICPOLARITY_RISING;
 1205              		.loc 1 507 3 view .LVU299
 508:Core/Src/main.c ****   sConfig.IC2Selection = TIM_ICSELECTION_DIRECTTI;
 1206              		.loc 1 508 3 view .LVU300
 509:Core/Src/main.c ****   sConfig.IC2Prescaler = TIM_ICPSC_DIV1;
 1207              		.loc 1 509 3 view .LVU301
 509:Core/Src/main.c ****   sConfig.IC2Prescaler = TIM_ICPSC_DIV1;
 1208              		.loc 1 509 24 is_stmt 0 view .LVU302
 1209 0030 0993     		str	r3, [sp, #36]
 510:Core/Src/main.c ****   sConfig.IC2Filter = 0;
 1210              		.loc 1 510 3 is_stmt 1 view .LVU303
 511:Core/Src/main.c ****   if (HAL_TIM_Encoder_Init(&htim3, &sConfig) != HAL_OK)
 1211              		.loc 1 511 3 view .LVU304
 512:Core/Src/main.c ****   {
 1212              		.loc 1 512 3 view .LVU305
 512:Core/Src/main.c ****   {
 1213              		.loc 1 512 7 is_stmt 0 view .LVU306
 1214 0032 03A9     		add	r1, sp, #12
 1215 0034 FFF7FEFF 		bl	HAL_TIM_Encoder_Init
 1216              	.LVL84:
 512:Core/Src/main.c ****   {
 1217              		.loc 1 512 6 view .LVU307
 1218 0038 50B9     		cbnz	r0, .L69
 516:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1219              		.loc 1 516 3 is_stmt 1 view .LVU308
 516:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1220              		.loc 1 516 37 is_stmt 0 view .LVU309
 1221 003a 0023     		movs	r3, #0
 1222 003c 0193     		str	r3, [sp, #4]
 517:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 1223              		.loc 1 517 3 is_stmt 1 view .LVU310
 517:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 1224              		.loc 1 517 33 is_stmt 0 view .LVU311
 1225 003e 0293     		str	r3, [sp, #8]
 518:Core/Src/main.c ****   {
 1226              		.loc 1 518 3 is_stmt 1 view .LVU312
 518:Core/Src/main.c ****   {
 1227              		.loc 1 518 7 is_stmt 0 view .LVU313
 1228 0040 01A9     		add	r1, sp, #4
 1229 0042 0548     		ldr	r0, .L71
 1230 0044 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 1231              	.LVL85:
 518:Core/Src/main.c ****   {
 1232              		.loc 1 518 6 view .LVU314
 1233 0048 20B9     		cbnz	r0, .L70
 526:Core/Src/main.c **** 
 1234              		.loc 1 526 1 view .LVU315
 1235 004a 0DB0     		add	sp, sp, #52
 1236              	.LCFI18:
 1237              		.cfi_remember_state
 1238              		.cfi_def_cfa_offset 4
 1239              		@ sp needed
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s 			page 58


 1240 004c 5DF804FB 		ldr	pc, [sp], #4
 1241              	.L69:
 1242              	.LCFI19:
 1243              		.cfi_restore_state
 514:Core/Src/main.c ****   }
 1244              		.loc 1 514 5 is_stmt 1 view .LVU316
 1245 0050 FFF7FEFF 		bl	Error_Handler
 1246              	.LVL86:
 1247              	.L70:
 520:Core/Src/main.c ****   }
 1248              		.loc 1 520 5 view .LVU317
 1249 0054 FFF7FEFF 		bl	Error_Handler
 1250              	.LVL87:
 1251              	.L72:
 1252              		.align	2
 1253              	.L71:
 1254 0058 00000000 		.word	htim3
 1255 005c 00040040 		.word	1073742848
 1256              		.cfi_endproc
 1257              	.LFE148:
 1259              		.section	.text.MX_TIM4_Init,"ax",%progbits
 1260              		.align	1
 1261              		.syntax unified
 1262              		.thumb
 1263              		.thumb_func
 1265              	MX_TIM4_Init:
 1266              	.LFB149:
 534:Core/Src/main.c **** 
 1267              		.loc 1 534 1 view -0
 1268              		.cfi_startproc
 1269              		@ args = 0, pretend = 0, frame = 48
 1270              		@ frame_needed = 0, uses_anonymous_args = 0
 1271 0000 00B5     		push	{lr}
 1272              	.LCFI20:
 1273              		.cfi_def_cfa_offset 4
 1274              		.cfi_offset 14, -4
 1275 0002 8DB0     		sub	sp, sp, #52
 1276              	.LCFI21:
 1277              		.cfi_def_cfa_offset 56
 540:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 1278              		.loc 1 540 3 view .LVU319
 540:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 1279              		.loc 1 540 27 is_stmt 0 view .LVU320
 1280 0004 2422     		movs	r2, #36
 1281 0006 0021     		movs	r1, #0
 1282 0008 03A8     		add	r0, sp, #12
 1283 000a FFF7FEFF 		bl	memset
 1284              	.LVL88:
 541:Core/Src/main.c **** 
 1285              		.loc 1 541 3 is_stmt 1 view .LVU321
 541:Core/Src/main.c **** 
 1286              		.loc 1 541 27 is_stmt 0 view .LVU322
 1287 000e 0023     		movs	r3, #0
 1288 0010 0193     		str	r3, [sp, #4]
 1289 0012 0293     		str	r3, [sp, #8]
 546:Core/Src/main.c ****   htim4.Init.Prescaler = 0;
 1290              		.loc 1 546 3 is_stmt 1 view .LVU323
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s 			page 59


 546:Core/Src/main.c ****   htim4.Init.Prescaler = 0;
 1291              		.loc 1 546 18 is_stmt 0 view .LVU324
 1292 0014 1048     		ldr	r0, .L79
 1293 0016 114A     		ldr	r2, .L79+4
 1294 0018 0260     		str	r2, [r0]
 547:Core/Src/main.c ****   htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 1295              		.loc 1 547 3 is_stmt 1 view .LVU325
 547:Core/Src/main.c ****   htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 1296              		.loc 1 547 24 is_stmt 0 view .LVU326
 1297 001a 4360     		str	r3, [r0, #4]
 548:Core/Src/main.c ****   htim4.Init.Period = 65535;
 1298              		.loc 1 548 3 is_stmt 1 view .LVU327
 548:Core/Src/main.c ****   htim4.Init.Period = 65535;
 1299              		.loc 1 548 26 is_stmt 0 view .LVU328
 1300 001c 8360     		str	r3, [r0, #8]
 549:Core/Src/main.c ****   htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1301              		.loc 1 549 3 is_stmt 1 view .LVU329
 549:Core/Src/main.c ****   htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1302              		.loc 1 549 21 is_stmt 0 view .LVU330
 1303 001e 4FF6FF72 		movw	r2, #65535
 1304 0022 C260     		str	r2, [r0, #12]
 550:Core/Src/main.c ****   htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1305              		.loc 1 550 3 is_stmt 1 view .LVU331
 550:Core/Src/main.c ****   htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1306              		.loc 1 550 28 is_stmt 0 view .LVU332
 1307 0024 0361     		str	r3, [r0, #16]
 551:Core/Src/main.c ****   sConfig.EncoderMode = TIM_ENCODERMODE_TI12;
 1308              		.loc 1 551 3 is_stmt 1 view .LVU333
 551:Core/Src/main.c ****   sConfig.EncoderMode = TIM_ENCODERMODE_TI12;
 1309              		.loc 1 551 32 is_stmt 0 view .LVU334
 1310 0026 8361     		str	r3, [r0, #24]
 552:Core/Src/main.c ****   sConfig.IC1Polarity = TIM_ICPOLARITY_RISING;
 1311              		.loc 1 552 3 is_stmt 1 view .LVU335
 552:Core/Src/main.c ****   sConfig.IC1Polarity = TIM_ICPOLARITY_RISING;
 1312              		.loc 1 552 23 is_stmt 0 view .LVU336
 1313 0028 0323     		movs	r3, #3
 1314 002a 0393     		str	r3, [sp, #12]
 553:Core/Src/main.c ****   sConfig.IC1Selection = TIM_ICSELECTION_DIRECTTI;
 1315              		.loc 1 553 3 is_stmt 1 view .LVU337
 554:Core/Src/main.c ****   sConfig.IC1Prescaler = TIM_ICPSC_DIV1;
 1316              		.loc 1 554 3 view .LVU338
 554:Core/Src/main.c ****   sConfig.IC1Prescaler = TIM_ICPSC_DIV1;
 1317              		.loc 1 554 24 is_stmt 0 view .LVU339
 1318 002c 0123     		movs	r3, #1
 1319 002e 0593     		str	r3, [sp, #20]
 555:Core/Src/main.c ****   sConfig.IC1Filter = 0;
 1320              		.loc 1 555 3 is_stmt 1 view .LVU340
 556:Core/Src/main.c ****   sConfig.IC2Polarity = TIM_ICPOLARITY_RISING;
 1321              		.loc 1 556 3 view .LVU341
 557:Core/Src/main.c ****   sConfig.IC2Selection = TIM_ICSELECTION_DIRECTTI;
 1322              		.loc 1 557 3 view .LVU342
 558:Core/Src/main.c ****   sConfig.IC2Prescaler = TIM_ICPSC_DIV1;
 1323              		.loc 1 558 3 view .LVU343
 558:Core/Src/main.c ****   sConfig.IC2Prescaler = TIM_ICPSC_DIV1;
 1324              		.loc 1 558 24 is_stmt 0 view .LVU344
 1325 0030 0993     		str	r3, [sp, #36]
 559:Core/Src/main.c ****   sConfig.IC2Filter = 0;
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s 			page 60


 1326              		.loc 1 559 3 is_stmt 1 view .LVU345
 560:Core/Src/main.c ****   if (HAL_TIM_Encoder_Init(&htim4, &sConfig) != HAL_OK)
 1327              		.loc 1 560 3 view .LVU346
 561:Core/Src/main.c ****   {
 1328              		.loc 1 561 3 view .LVU347
 561:Core/Src/main.c ****   {
 1329              		.loc 1 561 7 is_stmt 0 view .LVU348
 1330 0032 03A9     		add	r1, sp, #12
 1331 0034 FFF7FEFF 		bl	HAL_TIM_Encoder_Init
 1332              	.LVL89:
 561:Core/Src/main.c ****   {
 1333              		.loc 1 561 6 view .LVU349
 1334 0038 50B9     		cbnz	r0, .L77
 565:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1335              		.loc 1 565 3 is_stmt 1 view .LVU350
 565:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1336              		.loc 1 565 37 is_stmt 0 view .LVU351
 1337 003a 0023     		movs	r3, #0
 1338 003c 0193     		str	r3, [sp, #4]
 566:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 1339              		.loc 1 566 3 is_stmt 1 view .LVU352
 566:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 1340              		.loc 1 566 33 is_stmt 0 view .LVU353
 1341 003e 0293     		str	r3, [sp, #8]
 567:Core/Src/main.c ****   {
 1342              		.loc 1 567 3 is_stmt 1 view .LVU354
 567:Core/Src/main.c ****   {
 1343              		.loc 1 567 7 is_stmt 0 view .LVU355
 1344 0040 01A9     		add	r1, sp, #4
 1345 0042 0548     		ldr	r0, .L79
 1346 0044 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 1347              	.LVL90:
 567:Core/Src/main.c ****   {
 1348              		.loc 1 567 6 view .LVU356
 1349 0048 20B9     		cbnz	r0, .L78
 575:Core/Src/main.c **** 
 1350              		.loc 1 575 1 view .LVU357
 1351 004a 0DB0     		add	sp, sp, #52
 1352              	.LCFI22:
 1353              		.cfi_remember_state
 1354              		.cfi_def_cfa_offset 4
 1355              		@ sp needed
 1356 004c 5DF804FB 		ldr	pc, [sp], #4
 1357              	.L77:
 1358              	.LCFI23:
 1359              		.cfi_restore_state
 563:Core/Src/main.c ****   }
 1360              		.loc 1 563 5 is_stmt 1 view .LVU358
 1361 0050 FFF7FEFF 		bl	Error_Handler
 1362              	.LVL91:
 1363              	.L78:
 569:Core/Src/main.c ****   }
 1364              		.loc 1 569 5 view .LVU359
 1365 0054 FFF7FEFF 		bl	Error_Handler
 1366              	.LVL92:
 1367              	.L80:
 1368              		.align	2
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s 			page 61


 1369              	.L79:
 1370 0058 00000000 		.word	htim4
 1371 005c 00080040 		.word	1073743872
 1372              		.cfi_endproc
 1373              	.LFE149:
 1375              		.section	.text.MX_TIM7_Init,"ax",%progbits
 1376              		.align	1
 1377              		.syntax unified
 1378              		.thumb
 1379              		.thumb_func
 1381              	MX_TIM7_Init:
 1382              	.LFB150:
 583:Core/Src/main.c **** 
 1383              		.loc 1 583 1 view -0
 1384              		.cfi_startproc
 1385              		@ args = 0, pretend = 0, frame = 8
 1386              		@ frame_needed = 0, uses_anonymous_args = 0
 1387 0000 00B5     		push	{lr}
 1388              	.LCFI24:
 1389              		.cfi_def_cfa_offset 4
 1390              		.cfi_offset 14, -4
 1391 0002 83B0     		sub	sp, sp, #12
 1392              	.LCFI25:
 1393              		.cfi_def_cfa_offset 16
 589:Core/Src/main.c **** 
 1394              		.loc 1 589 3 view .LVU361
 589:Core/Src/main.c **** 
 1395              		.loc 1 589 27 is_stmt 0 view .LVU362
 1396 0004 0023     		movs	r3, #0
 1397 0006 0093     		str	r3, [sp]
 1398 0008 0193     		str	r3, [sp, #4]
 594:Core/Src/main.c ****   htim7.Init.Prescaler = 83;
 1399              		.loc 1 594 3 is_stmt 1 view .LVU363
 594:Core/Src/main.c ****   htim7.Init.Prescaler = 83;
 1400              		.loc 1 594 18 is_stmt 0 view .LVU364
 1401 000a 0E48     		ldr	r0, .L87
 1402 000c 0E4A     		ldr	r2, .L87+4
 1403 000e 0260     		str	r2, [r0]
 595:Core/Src/main.c ****   htim7.Init.CounterMode = TIM_COUNTERMODE_UP;
 1404              		.loc 1 595 3 is_stmt 1 view .LVU365
 595:Core/Src/main.c ****   htim7.Init.CounterMode = TIM_COUNTERMODE_UP;
 1405              		.loc 1 595 24 is_stmt 0 view .LVU366
 1406 0010 5322     		movs	r2, #83
 1407 0012 4260     		str	r2, [r0, #4]
 596:Core/Src/main.c ****   htim7.Init.Period = 999;
 1408              		.loc 1 596 3 is_stmt 1 view .LVU367
 596:Core/Src/main.c ****   htim7.Init.Period = 999;
 1409              		.loc 1 596 26 is_stmt 0 view .LVU368
 1410 0014 8360     		str	r3, [r0, #8]
 597:Core/Src/main.c ****   htim7.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1411              		.loc 1 597 3 is_stmt 1 view .LVU369
 597:Core/Src/main.c ****   htim7.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1412              		.loc 1 597 21 is_stmt 0 view .LVU370
 1413 0016 40F2E732 		movw	r2, #999
 1414 001a C260     		str	r2, [r0, #12]
 598:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim7) != HAL_OK)
 1415              		.loc 1 598 3 is_stmt 1 view .LVU371
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s 			page 62


 598:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim7) != HAL_OK)
 1416              		.loc 1 598 32 is_stmt 0 view .LVU372
 1417 001c 8361     		str	r3, [r0, #24]
 599:Core/Src/main.c ****   {
 1418              		.loc 1 599 3 is_stmt 1 view .LVU373
 599:Core/Src/main.c ****   {
 1419              		.loc 1 599 7 is_stmt 0 view .LVU374
 1420 001e FFF7FEFF 		bl	HAL_TIM_Base_Init
 1421              	.LVL93:
 599:Core/Src/main.c ****   {
 1422              		.loc 1 599 6 view .LVU375
 1423 0022 50B9     		cbnz	r0, .L85
 603:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1424              		.loc 1 603 3 is_stmt 1 view .LVU376
 603:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1425              		.loc 1 603 37 is_stmt 0 view .LVU377
 1426 0024 0023     		movs	r3, #0
 1427 0026 0093     		str	r3, [sp]
 604:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim7, &sMasterConfig) != HAL_OK)
 1428              		.loc 1 604 3 is_stmt 1 view .LVU378
 604:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim7, &sMasterConfig) != HAL_OK)
 1429              		.loc 1 604 33 is_stmt 0 view .LVU379
 1430 0028 0193     		str	r3, [sp, #4]
 605:Core/Src/main.c ****   {
 1431              		.loc 1 605 3 is_stmt 1 view .LVU380
 605:Core/Src/main.c ****   {
 1432              		.loc 1 605 7 is_stmt 0 view .LVU381
 1433 002a 6946     		mov	r1, sp
 1434 002c 0548     		ldr	r0, .L87
 1435 002e FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 1436              	.LVL94:
 605:Core/Src/main.c ****   {
 1437              		.loc 1 605 6 view .LVU382
 1438 0032 20B9     		cbnz	r0, .L86
 613:Core/Src/main.c **** 
 1439              		.loc 1 613 1 view .LVU383
 1440 0034 03B0     		add	sp, sp, #12
 1441              	.LCFI26:
 1442              		.cfi_remember_state
 1443              		.cfi_def_cfa_offset 4
 1444              		@ sp needed
 1445 0036 5DF804FB 		ldr	pc, [sp], #4
 1446              	.L85:
 1447              	.LCFI27:
 1448              		.cfi_restore_state
 601:Core/Src/main.c ****   }
 1449              		.loc 1 601 5 is_stmt 1 view .LVU384
 1450 003a FFF7FEFF 		bl	Error_Handler
 1451              	.LVL95:
 1452              	.L86:
 607:Core/Src/main.c ****   }
 1453              		.loc 1 607 5 view .LVU385
 1454 003e FFF7FEFF 		bl	Error_Handler
 1455              	.LVL96:
 1456              	.L88:
 1457 0042 00BF     		.align	2
 1458              	.L87:
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s 			page 63


 1459 0044 00000000 		.word	htim7
 1460 0048 00140040 		.word	1073746944
 1461              		.cfi_endproc
 1462              	.LFE150:
 1464              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
 1465              		.align	1
 1466              		.syntax unified
 1467              		.thumb
 1468              		.thumb_func
 1470              	MX_USART2_UART_Init:
 1471              	.LFB152:
 652:Core/Src/main.c **** 
 1472              		.loc 1 652 1 view -0
 1473              		.cfi_startproc
 1474              		@ args = 0, pretend = 0, frame = 0
 1475              		@ frame_needed = 0, uses_anonymous_args = 0
 1476 0000 08B5     		push	{r3, lr}
 1477              	.LCFI28:
 1478              		.cfi_def_cfa_offset 8
 1479              		.cfi_offset 3, -8
 1480              		.cfi_offset 14, -4
 661:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 1481              		.loc 1 661 3 view .LVU387
 661:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 1482              		.loc 1 661 19 is_stmt 0 view .LVU388
 1483 0002 0A48     		ldr	r0, .L93
 1484 0004 0A4B     		ldr	r3, .L93+4
 1485 0006 0360     		str	r3, [r0]
 662:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 1486              		.loc 1 662 3 is_stmt 1 view .LVU389
 662:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 1487              		.loc 1 662 24 is_stmt 0 view .LVU390
 1488 0008 4FF4E133 		mov	r3, #115200
 1489 000c 4360     		str	r3, [r0, #4]
 663:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 1490              		.loc 1 663 3 is_stmt 1 view .LVU391
 663:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 1491              		.loc 1 663 26 is_stmt 0 view .LVU392
 1492 000e 0023     		movs	r3, #0
 1493 0010 8360     		str	r3, [r0, #8]
 664:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 1494              		.loc 1 664 3 is_stmt 1 view .LVU393
 664:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 1495              		.loc 1 664 24 is_stmt 0 view .LVU394
 1496 0012 C360     		str	r3, [r0, #12]
 665:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 1497              		.loc 1 665 3 is_stmt 1 view .LVU395
 665:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 1498              		.loc 1 665 22 is_stmt 0 view .LVU396
 1499 0014 0361     		str	r3, [r0, #16]
 666:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1500              		.loc 1 666 3 is_stmt 1 view .LVU397
 666:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1501              		.loc 1 666 20 is_stmt 0 view .LVU398
 1502 0016 0C22     		movs	r2, #12
 1503 0018 4261     		str	r2, [r0, #20]
 667:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s 			page 64


 1504              		.loc 1 667 3 is_stmt 1 view .LVU399
 667:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 1505              		.loc 1 667 25 is_stmt 0 view .LVU400
 1506 001a 8361     		str	r3, [r0, #24]
 668:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 1507              		.loc 1 668 3 is_stmt 1 view .LVU401
 668:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 1508              		.loc 1 668 28 is_stmt 0 view .LVU402
 1509 001c C361     		str	r3, [r0, #28]
 669:Core/Src/main.c ****   {
 1510              		.loc 1 669 3 is_stmt 1 view .LVU403
 669:Core/Src/main.c ****   {
 1511              		.loc 1 669 7 is_stmt 0 view .LVU404
 1512 001e FFF7FEFF 		bl	HAL_UART_Init
 1513              	.LVL97:
 669:Core/Src/main.c ****   {
 1514              		.loc 1 669 6 view .LVU405
 1515 0022 00B9     		cbnz	r0, .L92
 677:Core/Src/main.c **** 
 1516              		.loc 1 677 1 view .LVU406
 1517 0024 08BD     		pop	{r3, pc}
 1518              	.L92:
 671:Core/Src/main.c ****   }
 1519              		.loc 1 671 5 is_stmt 1 view .LVU407
 1520 0026 FFF7FEFF 		bl	Error_Handler
 1521              	.LVL98:
 1522              	.L94:
 1523 002a 00BF     		.align	2
 1524              	.L93:
 1525 002c 00000000 		.word	huart2
 1526 0030 00440040 		.word	1073759232
 1527              		.cfi_endproc
 1528              	.LFE152:
 1530              		.section	.text.MX_TIM14_Init,"ax",%progbits
 1531              		.align	1
 1532              		.syntax unified
 1533              		.thumb
 1534              		.thumb_func
 1536              	MX_TIM14_Init:
 1537              	.LFB151:
 621:Core/Src/main.c **** 
 1538              		.loc 1 621 1 view -0
 1539              		.cfi_startproc
 1540              		@ args = 0, pretend = 0, frame = 0
 1541              		@ frame_needed = 0, uses_anonymous_args = 0
 1542 0000 08B5     		push	{r3, lr}
 1543              	.LCFI29:
 1544              		.cfi_def_cfa_offset 8
 1545              		.cfi_offset 3, -8
 1546              		.cfi_offset 14, -4
 630:Core/Src/main.c ****   htim14.Init.Prescaler = 0;
 1547              		.loc 1 630 3 view .LVU409
 630:Core/Src/main.c ****   htim14.Init.Prescaler = 0;
 1548              		.loc 1 630 19 is_stmt 0 view .LVU410
 1549 0002 0848     		ldr	r0, .L99
 1550 0004 084B     		ldr	r3, .L99+4
 1551 0006 0360     		str	r3, [r0]
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s 			page 65


 631:Core/Src/main.c ****   htim14.Init.CounterMode = TIM_COUNTERMODE_UP;
 1552              		.loc 1 631 3 is_stmt 1 view .LVU411
 631:Core/Src/main.c ****   htim14.Init.CounterMode = TIM_COUNTERMODE_UP;
 1553              		.loc 1 631 25 is_stmt 0 view .LVU412
 1554 0008 0023     		movs	r3, #0
 1555 000a 4360     		str	r3, [r0, #4]
 632:Core/Src/main.c ****   htim14.Init.Period = 840-1;
 1556              		.loc 1 632 3 is_stmt 1 view .LVU413
 632:Core/Src/main.c ****   htim14.Init.Period = 840-1;
 1557              		.loc 1 632 27 is_stmt 0 view .LVU414
 1558 000c 8360     		str	r3, [r0, #8]
 633:Core/Src/main.c ****   htim14.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1559              		.loc 1 633 3 is_stmt 1 view .LVU415
 633:Core/Src/main.c ****   htim14.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1560              		.loc 1 633 22 is_stmt 0 view .LVU416
 1561 000e 40F24732 		movw	r2, #839
 1562 0012 C260     		str	r2, [r0, #12]
 634:Core/Src/main.c ****   htim14.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1563              		.loc 1 634 3 is_stmt 1 view .LVU417
 634:Core/Src/main.c ****   htim14.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1564              		.loc 1 634 29 is_stmt 0 view .LVU418
 1565 0014 0361     		str	r3, [r0, #16]
 635:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim14) != HAL_OK)
 1566              		.loc 1 635 3 is_stmt 1 view .LVU419
 635:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim14) != HAL_OK)
 1567              		.loc 1 635 33 is_stmt 0 view .LVU420
 1568 0016 8361     		str	r3, [r0, #24]
 636:Core/Src/main.c ****   {
 1569              		.loc 1 636 3 is_stmt 1 view .LVU421
 636:Core/Src/main.c ****   {
 1570              		.loc 1 636 7 is_stmt 0 view .LVU422
 1571 0018 FFF7FEFF 		bl	HAL_TIM_Base_Init
 1572              	.LVL99:
 636:Core/Src/main.c ****   {
 1573              		.loc 1 636 6 view .LVU423
 1574 001c 00B9     		cbnz	r0, .L98
 644:Core/Src/main.c **** 
 1575              		.loc 1 644 1 view .LVU424
 1576 001e 08BD     		pop	{r3, pc}
 1577              	.L98:
 638:Core/Src/main.c ****   }
 1578              		.loc 1 638 5 is_stmt 1 view .LVU425
 1579 0020 FFF7FEFF 		bl	Error_Handler
 1580              	.LVL100:
 1581              	.L100:
 1582              		.align	2
 1583              	.L99:
 1584 0024 00000000 		.word	htim14
 1585 0028 00200040 		.word	1073750016
 1586              		.cfi_endproc
 1587              	.LFE151:
 1589              		.section	.text.SystemClock_Config,"ax",%progbits
 1590              		.align	1
 1591              		.global	SystemClock_Config
 1592              		.syntax unified
 1593              		.thumb
 1594              		.thumb_func
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s 			page 66


 1596              	SystemClock_Config:
 1597              	.LFB146:
 360:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 1598              		.loc 1 360 1 view -0
 1599              		.cfi_startproc
 1600              		@ args = 0, pretend = 0, frame = 80
 1601              		@ frame_needed = 0, uses_anonymous_args = 0
 1602 0000 00B5     		push	{lr}
 1603              	.LCFI30:
 1604              		.cfi_def_cfa_offset 4
 1605              		.cfi_offset 14, -4
 1606 0002 95B0     		sub	sp, sp, #84
 1607              	.LCFI31:
 1608              		.cfi_def_cfa_offset 88
 361:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1609              		.loc 1 361 3 view .LVU427
 361:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1610              		.loc 1 361 22 is_stmt 0 view .LVU428
 1611 0004 3422     		movs	r2, #52
 1612 0006 0021     		movs	r1, #0
 1613 0008 07A8     		add	r0, sp, #28
 1614 000a FFF7FEFF 		bl	memset
 1615              	.LVL101:
 362:Core/Src/main.c **** 
 1616              		.loc 1 362 3 is_stmt 1 view .LVU429
 362:Core/Src/main.c **** 
 1617              		.loc 1 362 22 is_stmt 0 view .LVU430
 1618 000e 0023     		movs	r3, #0
 1619 0010 0293     		str	r3, [sp, #8]
 1620 0012 0393     		str	r3, [sp, #12]
 1621 0014 0493     		str	r3, [sp, #16]
 1622 0016 0593     		str	r3, [sp, #20]
 1623 0018 0693     		str	r3, [sp, #24]
 366:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 1624              		.loc 1 366 3 is_stmt 1 view .LVU431
 1625              	.LBB12:
 366:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 1626              		.loc 1 366 3 view .LVU432
 1627 001a 0093     		str	r3, [sp]
 366:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 1628              		.loc 1 366 3 view .LVU433
 1629 001c 1F4A     		ldr	r2, .L107
 1630 001e 116C     		ldr	r1, [r2, #64]
 1631 0020 41F08051 		orr	r1, r1, #268435456
 1632 0024 1164     		str	r1, [r2, #64]
 366:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 1633              		.loc 1 366 3 view .LVU434
 1634 0026 126C     		ldr	r2, [r2, #64]
 1635 0028 02F08052 		and	r2, r2, #268435456
 1636 002c 0092     		str	r2, [sp]
 366:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 1637              		.loc 1 366 3 view .LVU435
 1638 002e 009A     		ldr	r2, [sp]
 1639              	.LBE12:
 366:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 1640              		.loc 1 366 3 view .LVU436
 367:Core/Src/main.c **** 
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s 			page 67


 1641              		.loc 1 367 3 view .LVU437
 1642              	.LBB13:
 367:Core/Src/main.c **** 
 1643              		.loc 1 367 3 view .LVU438
 1644 0030 0193     		str	r3, [sp, #4]
 367:Core/Src/main.c **** 
 1645              		.loc 1 367 3 view .LVU439
 1646 0032 1B49     		ldr	r1, .L107+4
 1647 0034 0A68     		ldr	r2, [r1]
 1648 0036 22F44042 		bic	r2, r2, #49152
 1649 003a 42F48042 		orr	r2, r2, #16384
 1650 003e 0A60     		str	r2, [r1]
 367:Core/Src/main.c **** 
 1651              		.loc 1 367 3 view .LVU440
 1652 0040 0A68     		ldr	r2, [r1]
 1653 0042 02F44042 		and	r2, r2, #49152
 1654 0046 0192     		str	r2, [sp, #4]
 367:Core/Src/main.c **** 
 1655              		.loc 1 367 3 view .LVU441
 1656 0048 019A     		ldr	r2, [sp, #4]
 1657              	.LBE13:
 367:Core/Src/main.c **** 
 1658              		.loc 1 367 3 view .LVU442
 372:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1659              		.loc 1 372 3 view .LVU443
 372:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1660              		.loc 1 372 36 is_stmt 0 view .LVU444
 1661 004a 0222     		movs	r2, #2
 1662 004c 0792     		str	r2, [sp, #28]
 373:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1663              		.loc 1 373 3 is_stmt 1 view .LVU445
 373:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1664              		.loc 1 373 30 is_stmt 0 view .LVU446
 1665 004e 0121     		movs	r1, #1
 1666 0050 0A91     		str	r1, [sp, #40]
 374:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1667              		.loc 1 374 3 is_stmt 1 view .LVU447
 374:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1668              		.loc 1 374 41 is_stmt 0 view .LVU448
 1669 0052 1021     		movs	r1, #16
 1670 0054 0B91     		str	r1, [sp, #44]
 375:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 1671              		.loc 1 375 3 is_stmt 1 view .LVU449
 375:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 1672              		.loc 1 375 34 is_stmt 0 view .LVU450
 1673 0056 0D92     		str	r2, [sp, #52]
 376:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 16;
 1674              		.loc 1 376 3 is_stmt 1 view .LVU451
 376:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 16;
 1675              		.loc 1 376 35 is_stmt 0 view .LVU452
 1676 0058 0E93     		str	r3, [sp, #56]
 377:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 336;
 1677              		.loc 1 377 3 is_stmt 1 view .LVU453
 377:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 336;
 1678              		.loc 1 377 30 is_stmt 0 view .LVU454
 1679 005a 0F91     		str	r1, [sp, #60]
 378:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s 			page 68


 1680              		.loc 1 378 3 is_stmt 1 view .LVU455
 378:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 1681              		.loc 1 378 30 is_stmt 0 view .LVU456
 1682 005c 4FF4A873 		mov	r3, #336
 1683 0060 1093     		str	r3, [sp, #64]
 379:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 1684              		.loc 1 379 3 is_stmt 1 view .LVU457
 379:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 1685              		.loc 1 379 30 is_stmt 0 view .LVU458
 1686 0062 0423     		movs	r3, #4
 1687 0064 1193     		str	r3, [sp, #68]
 380:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 1688              		.loc 1 380 3 is_stmt 1 view .LVU459
 380:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 1689              		.loc 1 380 30 is_stmt 0 view .LVU460
 1690 0066 1292     		str	r2, [sp, #72]
 381:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1691              		.loc 1 381 3 is_stmt 1 view .LVU461
 381:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1692              		.loc 1 381 30 is_stmt 0 view .LVU462
 1693 0068 1392     		str	r2, [sp, #76]
 382:Core/Src/main.c ****   {
 1694              		.loc 1 382 3 is_stmt 1 view .LVU463
 382:Core/Src/main.c ****   {
 1695              		.loc 1 382 7 is_stmt 0 view .LVU464
 1696 006a 07A8     		add	r0, sp, #28
 1697 006c FFF7FEFF 		bl	HAL_RCC_OscConfig
 1698              	.LVL102:
 382:Core/Src/main.c ****   {
 1699              		.loc 1 382 6 view .LVU465
 1700 0070 80B9     		cbnz	r0, .L105
 389:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1701              		.loc 1 389 3 is_stmt 1 view .LVU466
 389:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1702              		.loc 1 389 31 is_stmt 0 view .LVU467
 1703 0072 0F23     		movs	r3, #15
 1704 0074 0293     		str	r3, [sp, #8]
 391:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1705              		.loc 1 391 3 is_stmt 1 view .LVU468
 391:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1706              		.loc 1 391 34 is_stmt 0 view .LVU469
 1707 0076 0221     		movs	r1, #2
 1708 0078 0391     		str	r1, [sp, #12]
 392:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 1709              		.loc 1 392 3 is_stmt 1 view .LVU470
 392:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 1710              		.loc 1 392 35 is_stmt 0 view .LVU471
 1711 007a 0023     		movs	r3, #0
 1712 007c 0493     		str	r3, [sp, #16]
 393:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1713              		.loc 1 393 3 is_stmt 1 view .LVU472
 393:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1714              		.loc 1 393 36 is_stmt 0 view .LVU473
 1715 007e 4FF48052 		mov	r2, #4096
 1716 0082 0592     		str	r2, [sp, #20]
 394:Core/Src/main.c **** 
 1717              		.loc 1 394 3 is_stmt 1 view .LVU474
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s 			page 69


 394:Core/Src/main.c **** 
 1718              		.loc 1 394 36 is_stmt 0 view .LVU475
 1719 0084 0693     		str	r3, [sp, #24]
 396:Core/Src/main.c ****   {
 1720              		.loc 1 396 3 is_stmt 1 view .LVU476
 396:Core/Src/main.c ****   {
 1721              		.loc 1 396 7 is_stmt 0 view .LVU477
 1722 0086 02A8     		add	r0, sp, #8
 1723 0088 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1724              	.LVL103:
 396:Core/Src/main.c ****   {
 1725              		.loc 1 396 6 view .LVU478
 1726 008c 20B9     		cbnz	r0, .L106
 400:Core/Src/main.c **** 
 1727              		.loc 1 400 1 view .LVU479
 1728 008e 15B0     		add	sp, sp, #84
 1729              	.LCFI32:
 1730              		.cfi_remember_state
 1731              		.cfi_def_cfa_offset 4
 1732              		@ sp needed
 1733 0090 5DF804FB 		ldr	pc, [sp], #4
 1734              	.L105:
 1735              	.LCFI33:
 1736              		.cfi_restore_state
 384:Core/Src/main.c ****   }
 1737              		.loc 1 384 5 is_stmt 1 view .LVU480
 1738 0094 FFF7FEFF 		bl	Error_Handler
 1739              	.LVL104:
 1740              	.L106:
 398:Core/Src/main.c ****   }
 1741              		.loc 1 398 5 view .LVU481
 1742 0098 FFF7FEFF 		bl	Error_Handler
 1743              	.LVL105:
 1744              	.L108:
 1745              		.align	2
 1746              	.L107:
 1747 009c 00380240 		.word	1073887232
 1748 00a0 00700040 		.word	1073770496
 1749              		.cfi_endproc
 1750              	.LFE146:
 1752              		.section	.text.main,"ax",%progbits
 1753              		.align	1
 1754              		.global	main
 1755              		.syntax unified
 1756              		.thumb
 1757              		.thumb_func
 1759              	main:
 1760              	.LFB145:
 265:Core/Src/main.c **** 
 1761              		.loc 1 265 1 view -0
 1762              		.cfi_startproc
 1763              		@ Volatile: function does not return.
 1764              		@ args = 0, pretend = 0, frame = 0
 1765              		@ frame_needed = 0, uses_anonymous_args = 0
 1766 0000 00B5     		push	{lr}
 1767              	.LCFI34:
 1768              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s 			page 70


 1769              		.cfi_offset 14, -4
 1770 0002 83B0     		sub	sp, sp, #12
 1771              	.LCFI35:
 1772              		.cfi_def_cfa_offset 16
 275:Core/Src/main.c **** 
 1773              		.loc 1 275 3 view .LVU483
 1774 0004 FFF7FEFF 		bl	HAL_Init
 1775              	.LVL106:
 282:Core/Src/main.c **** 
 1776              		.loc 1 282 3 view .LVU484
 1777 0008 FFF7FEFF 		bl	SystemClock_Config
 1778              	.LVL107:
 289:Core/Src/main.c ****   MX_DMA_Init();
 1779              		.loc 1 289 3 view .LVU485
 1780 000c FFF7FEFF 		bl	MX_GPIO_Init
 1781              	.LVL108:
 290:Core/Src/main.c ****   MX_TIM1_Init();
 1782              		.loc 1 290 3 view .LVU486
 1783 0010 FFF7FEFF 		bl	MX_DMA_Init
 1784              	.LVL109:
 291:Core/Src/main.c ****   MX_TIM3_Init();
 1785              		.loc 1 291 3 view .LVU487
 1786 0014 FFF7FEFF 		bl	MX_TIM1_Init
 1787              	.LVL110:
 292:Core/Src/main.c ****   MX_TIM4_Init();
 1788              		.loc 1 292 3 view .LVU488
 1789 0018 FFF7FEFF 		bl	MX_TIM3_Init
 1790              	.LVL111:
 293:Core/Src/main.c ****   MX_TIM7_Init();
 1791              		.loc 1 293 3 view .LVU489
 1792 001c FFF7FEFF 		bl	MX_TIM4_Init
 1793              	.LVL112:
 294:Core/Src/main.c ****   MX_USART2_UART_Init();
 1794              		.loc 1 294 3 view .LVU490
 1795 0020 FFF7FEFF 		bl	MX_TIM7_Init
 1796              	.LVL113:
 295:Core/Src/main.c ****   MX_TIM14_Init();
 1797              		.loc 1 295 3 view .LVU491
 1798 0024 FFF7FEFF 		bl	MX_USART2_UART_Init
 1799              	.LVL114:
 296:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 1800              		.loc 1 296 3 view .LVU492
 1801 0028 FFF7FEFF 		bl	MX_TIM14_Init
 1802              	.LVL115:
 298:Core/Src/main.c ****          set_motors(&htim1,4499,TIM_CHANNEL_1,TIM_CHANNEL_2,TIM_CHANNEL_4,TIM_CHANNEL_3);
 1803              		.loc 1 298 3 view .LVU493
 1804 002c DFED1E1A 		vldr.32	s3, .L112
 1805 0030 9FED1E1A 		vldr.32	s2, .L112+4
 1806 0034 DFED1E0A 		vldr.32	s1, .L112+8
 1807 0038 9FED1E0A 		vldr.32	s0, .L112+12
 1808 003c FFF7FEFF 		bl	set_dimentions
 1809              	.LVL116:
 299:Core/Src/main.c ****          set_right_encoder(&htim4,TIM4,1000,4,-1);//400 ROBOT KBIR
 1810              		.loc 1 299 10 view .LVU494
 1811 0040 0823     		movs	r3, #8
 1812 0042 0193     		str	r3, [sp, #4]
 1813 0044 0C23     		movs	r3, #12
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s 			page 71


 1814 0046 0093     		str	r3, [sp]
 1815 0048 0423     		movs	r3, #4
 1816 004a 0022     		movs	r2, #0
 1817 004c 41F29311 		movw	r1, #4499
 1818 0050 1948     		ldr	r0, .L112+16
 1819 0052 FFF7FEFF 		bl	set_motors
 1820              	.LVL117:
 300:Core/Src/main.c ****          set_left_encoder(&htim3,TIM3,1000,4,1);
 1821              		.loc 1 300 10 view .LVU495
 1822 0056 4FF0FF33 		mov	r3, #-1
 1823 005a 0093     		str	r3, [sp]
 1824 005c 0423     		movs	r3, #4
 1825 005e 4FF47A72 		mov	r2, #1000
 1826 0062 1649     		ldr	r1, .L112+20
 1827 0064 1648     		ldr	r0, .L112+24
 1828 0066 FFF7FEFF 		bl	set_right_encoder
 1829              	.LVL118:
 301:Core/Src/main.c ****          HAL_TIM_Base_Start_IT(&htim7);
 1830              		.loc 1 301 10 view .LVU496
 1831 006a 0123     		movs	r3, #1
 1832 006c 0093     		str	r3, [sp]
 1833 006e 0423     		movs	r3, #4
 1834 0070 4FF47A72 		mov	r2, #1000
 1835 0074 1349     		ldr	r1, .L112+28
 1836 0076 1448     		ldr	r0, .L112+32
 1837 0078 FFF7FEFF 		bl	set_left_encoder
 1838              	.LVL119:
 302:Core/Src/main.c ****          set_PWM_min (900,900,900,900);
 1839              		.loc 1 302 10 view .LVU497
 1840 007c 1348     		ldr	r0, .L112+36
 1841 007e FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 1842              	.LVL120:
 303:Core/Src/main.c **** 
 1843              		.loc 1 303 10 view .LVU498
 1844 0082 4FF46173 		mov	r3, #900
 1845 0086 1A46     		mov	r2, r3
 1846 0088 1946     		mov	r1, r3
 1847 008a 1846     		mov	r0, r3
 1848 008c FFF7FEFF 		bl	set_PWM_min
 1849              	.LVL121:
 309:Core/Src/main.c **** 
 1850              		.loc 1 309 3 view .LVU499
 1851 0090 FFF7FEFF 		bl	osKernelInitialize
 1852              	.LVL122:
 329:Core/Src/main.c **** 
 1853              		.loc 1 329 3 view .LVU500
 329:Core/Src/main.c **** 
 1854              		.loc 1 329 23 is_stmt 0 view .LVU501
 1855 0094 0E4A     		ldr	r2, .L112+40
 1856 0096 0021     		movs	r1, #0
 1857 0098 0E48     		ldr	r0, .L112+44
 1858 009a FFF7FEFF 		bl	osThreadNew
 1859              	.LVL123:
 329:Core/Src/main.c **** 
 1860              		.loc 1 329 21 view .LVU502
 1861 009e 0E4B     		ldr	r3, .L112+48
 1862 00a0 1860     		str	r0, [r3]
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s 			page 72


 340:Core/Src/main.c **** 
 1863              		.loc 1 340 3 is_stmt 1 view .LVU503
 1864 00a2 FFF7FEFF 		bl	osKernelStart
 1865              	.LVL124:
 1866              	.L110:
 346:Core/Src/main.c ****   {
 1867              		.loc 1 346 3 discriminator 1 view .LVU504
 351:Core/Src/main.c ****   /* USER CODE END 3 */
 1868              		.loc 1 351 3 discriminator 1 view .LVU505
 346:Core/Src/main.c ****   {
 1869              		.loc 1 346 9 discriminator 1 view .LVU506
 1870 00a6 FEE7     		b	.L110
 1871              	.L113:
 1872              		.align	2
 1873              	.L112:
 1874 00a8 66E66343 		.word	1130620518
 1875 00ac 0000AE43 		.word	1135476736
 1876 00b0 90362242 		.word	1109538448
 1877 00b4 A2392242 		.word	1109539234
 1878 00b8 00000000 		.word	htim1
 1879 00bc 00080040 		.word	1073743872
 1880 00c0 00000000 		.word	htim4
 1881 00c4 00040040 		.word	1073742848
 1882 00c8 00000000 		.word	htim3
 1883 00cc 00000000 		.word	htim7
 1884 00d0 00000000 		.word	defaultTask_attributes
 1885 00d4 00000000 		.word	StartDefaultTask
 1886 00d8 00000000 		.word	defaultTaskHandle
 1887              		.cfi_endproc
 1888              	.LFE145:
 1890              		.global	defaultTask_attributes
 1891              		.section	.rodata.str1.4,"aMS",%progbits,1
 1892              		.align	2
 1893              	.LC6:
 1894 0000 64656661 		.ascii	"defaultTask\000"
 1894      756C7454 
 1894      61736B00 
 1895              		.section	.rodata.defaultTask_attributes,"a"
 1896              		.align	2
 1899              	defaultTask_attributes:
 1900 0000 00000000 		.word	.LC6
 1901 0004 00000000 		.space	16
 1901      00000000 
 1901      00000000 
 1901      00000000 
 1902 0014 E02E0000 		.word	12000
 1903 0018 18000000 		.word	24
 1904 001c 00000000 		.space	8
 1904      00000000 
 1905              		.global	defaultTaskHandle
 1906              		.section	.bss.defaultTaskHandle,"aw",%nobits
 1907              		.align	2
 1910              	defaultTaskHandle:
 1911 0000 00000000 		.space	4
 1912              		.global	hdma_usart2_tx
 1913              		.section	.bss.hdma_usart2_tx,"aw",%nobits
 1914              		.align	2
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s 			page 73


 1917              	hdma_usart2_tx:
 1918 0000 00000000 		.space	96
 1918      00000000 
 1918      00000000 
 1918      00000000 
 1918      00000000 
 1919              		.global	hdma_usart2_rx
 1920              		.section	.bss.hdma_usart2_rx,"aw",%nobits
 1921              		.align	2
 1924              	hdma_usart2_rx:
 1925 0000 00000000 		.space	96
 1925      00000000 
 1925      00000000 
 1925      00000000 
 1925      00000000 
 1926              		.global	huart2
 1927              		.section	.bss.huart2,"aw",%nobits
 1928              		.align	2
 1931              	huart2:
 1932 0000 00000000 		.space	72
 1932      00000000 
 1932      00000000 
 1932      00000000 
 1932      00000000 
 1933              		.global	htim14
 1934              		.section	.bss.htim14,"aw",%nobits
 1935              		.align	2
 1938              	htim14:
 1939 0000 00000000 		.space	72
 1939      00000000 
 1939      00000000 
 1939      00000000 
 1939      00000000 
 1940              		.global	htim7
 1941              		.section	.bss.htim7,"aw",%nobits
 1942              		.align	2
 1945              	htim7:
 1946 0000 00000000 		.space	72
 1946      00000000 
 1946      00000000 
 1946      00000000 
 1946      00000000 
 1947              		.global	htim4
 1948              		.section	.bss.htim4,"aw",%nobits
 1949              		.align	2
 1952              	htim4:
 1953 0000 00000000 		.space	72
 1953      00000000 
 1953      00000000 
 1953      00000000 
 1953      00000000 
 1954              		.global	htim3
 1955              		.section	.bss.htim3,"aw",%nobits
 1956              		.align	2
 1959              	htim3:
 1960 0000 00000000 		.space	72
 1960      00000000 
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s 			page 74


 1960      00000000 
 1960      00000000 
 1960      00000000 
 1961              		.global	htim1
 1962              		.section	.bss.htim1,"aw",%nobits
 1963              		.align	2
 1966              	htim1:
 1967 0000 00000000 		.space	72
 1967      00000000 
 1967      00000000 
 1967      00000000 
 1967      00000000 
 1968              		.global	response_msg
 1969              		.section	.bss.response_msg,"aw",%nobits
 1970              		.align	2
 1973              	response_msg:
 1974 0000 00       		.space	1
 1975              		.global	request_msg
 1976              		.section	.bss.request_msg,"aw",%nobits
 1977              		.align	2
 1980              	request_msg:
 1981 0000 00000000 		.space	40
 1981      00000000 
 1981      00000000 
 1981      00000000 
 1981      00000000 
 1982              		.global	executor
 1983              		.section	.bss.executor,"aw",%nobits
 1984              		.align	3
 1987              	executor:
 1988 0000 00000000 		.space	136
 1988      00000000 
 1988      00000000 
 1988      00000000 
 1988      00000000 
 1989              		.global	service
 1990              		.section	.bss.service,"aw",%nobits
 1991              		.align	2
 1994              	service:
 1995 0000 00000000 		.space	4
 1996              		.global	bool_msg
 1997              		.section	.bss.bool_msg,"aw",%nobits
 1998              		.align	2
 2001              	bool_msg:
 2002 0000 00       		.space	1
 2003              		.global	bool_subscriber
 2004              		.section	.bss.bool_subscriber,"aw",%nobits
 2005              		.align	2
 2008              	bool_subscriber:
 2009 0000 00000000 		.space	4
 2010              		.global	pose_publisher
 2011              		.section	.bss.pose_publisher,"aw",%nobits
 2012              		.align	2
 2015              	pose_publisher:
 2016 0000 00000000 		.space	4
 2017              		.global	allocator
 2018              		.section	.bss.allocator,"aw",%nobits
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s 			page 75


 2019              		.align	2
 2022              	allocator:
 2023 0000 00000000 		.space	20
 2023      00000000 
 2023      00000000 
 2023      00000000 
 2023      00000000 
 2024              		.global	support
 2025              		.section	.bss.support,"aw",%nobits
 2026              		.align	2
 2029              	support:
 2030 0000 00000000 		.space	52
 2030      00000000 
 2030      00000000 
 2030      00000000 
 2030      00000000 
 2031              		.global	node
 2032              		.section	.bss.node,"aw",%nobits
 2033              		.align	2
 2036              	node:
 2037 0000 00000000 		.space	8
 2037      00000000 
 2038              		.global	ulHighFrequencyTimerTicks
 2039              		.section	.bss.ulHighFrequencyTimerTicks,"aw",%nobits
 2040              		.align	2
 2043              	ulHighFrequencyTimerTicks:
 2044 0000 00000000 		.space	4
 2045              		.global	mutex_button
 2046              		.section	.bss.mutex_button,"aw",%nobits
 2047              		.align	2
 2050              	mutex_button:
 2051 0000 00000000 		.space	4
 2052              		.global	evitementFlag
 2053              		.section	.bss.evitementFlag,"aw",%nobits
 2056              	evitementFlag:
 2057 0000 00       		.space	1
 2058              		.text
 2059              	.Letext0:
 2060              		.file 3 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f446xx.h"
 2061              		.file 4 "C:\\ST\\STM32CubeIDE_1.16.0\\STM32CubeIDE\\plugins\\com.st.stm32cube.ide.mcu.externaltool
 2062              		.file 5 "C:\\ST\\STM32CubeIDE_1.16.0\\STM32CubeIDE\\plugins\\com.st.stm32cube.ide.mcu.externaltool
 2063              		.file 6 "C:\\ST\\STM32CubeIDE_1.16.0\\STM32CubeIDE\\plugins\\com.st.stm32cube.ide.mcu.externaltool
 2064              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 2065              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 2066              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 2067              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 2068              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 2069              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 2070              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 2071              		.file 14 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h"
 2072              		.file 15 "libmicroros/uros_include/rcutils/rcutils/allocator.h"
 2073              		.file 16 "libmicroros/uros_include/rcl/rcl/allocator.h"
 2074              		.file 17 "libmicroros/uros_include/rmw/rmw/ret_types.h"
 2075              		.file 18 "libmicroros/uros_include/rcutils/rcutils/time.h"
 2076              		.file 19 "libmicroros/uros_include/rmw/rmw/time.h"
 2077              		.file 20 "libmicroros/uros_include/rmw/rmw/types.h"
 2078              		.file 21 "libmicroros/uros_include/rcl/rcl/types.h"
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s 			page 76


 2079              		.file 22 "libmicroros/uros_include/rcl/rcl/context.h"
 2080              		.file 23 "libmicroros/uros_include/rcl/rcl/guard_condition.h"
 2081              		.file 24 "libmicroros/uros_include/rcl/rcl/node.h"
 2082              		.file 25 "libmicroros/uros_include/rosidl_runtime_c/rosidl_runtime_c/message_type_support_struct.h
 2083              		.file 26 "libmicroros/uros_include/rcl/rcl/time.h"
 2084              		.file 27 "libmicroros/uros_include/rcl/rcl/publisher.h"
 2085              		.file 28 "libmicroros/uros_include/rcl/rcl/subscription.h"
 2086              		.file 29 "libmicroros/uros_include/rosidl_runtime_c/rosidl_runtime_c/service_type_support_struct.h
 2087              		.file 30 "libmicroros/uros_include/rcl/rcl/client.h"
 2088              		.file 31 "libmicroros/uros_include/rcl/rcl/service.h"
 2089              		.file 32 "libmicroros/uros_include/rmw/rmw/qos_profiles.h"
 2090              		.file 33 "libmicroros/uros_include/rcl/rcl/timer.h"
 2091              		.file 34 "libmicroros/uros_include/rcl/rcl/event.h"
 2092              		.file 35 "libmicroros/uros_include/rcl/rcl/wait.h"
 2093              		.file 36 "libmicroros/uros_include/rclc/types.h"
 2094              		.file 37 "libmicroros/uros_include/unique_identifier_msgs/unique_identifier_msgs/msg/detail/uuid__
 2095              		.file 38 "libmicroros/uros_include/builtin_interfaces/builtin_interfaces/msg/detail/time__struct.h
 2096              		.file 39 "libmicroros/uros_include/action_msgs/action_msgs/msg/detail/goal_info__struct.h"
 2097              		.file 40 "libmicroros/uros_include/action_msgs/action_msgs/srv/detail/cancel_goal__struct.h"
 2098              		.file 41 "libmicroros/uros_include/rcl_action/rcl_action/types.h"
 2099              		.file 42 "libmicroros/uros_include/rcl_action/rcl_action/action_client.h"
 2100              		.file 43 "libmicroros/uros_include/rcl_action/rcl_action/action_server.h"
 2101              		.file 44 "libmicroros/uros_include/rcl_action/rcl_action/default_qos.h"
 2102              		.file 45 "libmicroros/uros_include/rclc/action_goal_handle.h"
 2103              		.file 46 "libmicroros/uros_include/rclc/action_server.h"
 2104              		.file 47 "libmicroros/uros_include/rclc/action_client.h"
 2105              		.file 48 "libmicroros/uros_include/geometry_msgs/geometry_msgs/msg/detail/vector3__struct.h"
 2106              		.file 49 "libmicroros/uros_include/std_msgs/std_msgs/msg/detail/bool__struct.h"
 2107              		.file 50 "libmicroros/uros_include/rclc/executor_handle.h"
 2108              		.file 51 "libmicroros/uros_include/rclc/executor.h"
 2109              		.file 52 "libmicroros/uros_include/uxr/client/core/communication/communication.h"
 2110              		.file 53 "libmicroros/uros_include/uxr/client/profile/transport/stream_framing/stream_framing_prot
 2111              		.file 54 "libmicroros/uros_include/uxr/client/profile/transport/custom/custom_transport.h"
 2112              		.file 55 "libmicroros/uros_include/service/service/srv/detail/navi_stm__struct.h"
 2113              		.file 56 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 2114              		.file 57 "Core/Inc/Odometry.h"
 2115              		.file 58 "Core/Inc/Motors.h"
 2116              		.file 59 "libmicroros/uros_include/rclc/service.h"
 2117              		.file 60 "libmicroros/uros_include/rclc/subscription.h"
 2118              		.file 61 "libmicroros/uros_include/std_msgs/std_msgs/msg/detail/bool__type_support.h"
 2119              		.file 62 "libmicroros/uros_include/rclc/publisher.h"
 2120              		.file 63 "libmicroros/uros_include/geometry_msgs/geometry_msgs/msg/detail/vector3__type_support.h"
 2121              		.file 64 "libmicroros/uros_include/rclc/node.h"
 2122              		.file 65 "libmicroros/uros_include/rclc/init.h"
 2123              		.file 66 "libmicroros/uros_include/rmw_microros/custom_transport.h"
 2124              		.file 67 "Core/Inc/main.h"
 2125              		.file 68 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim_ex.h"
 2126              		.file 69 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 2127              		.file 70 "Core/Inc/Robot_Navi_Euro20.h"
 2128              		.file 71 "<built-in>"
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s 			page 77


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s:21     .text.bool_subscriber_callback:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s:27     .text.bool_subscriber_callback:00000000 bool_subscriber_callback
C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s:47     .text.bool_subscriber_callback:00000008 $d
C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s:2056   .bss.evitementFlag:00000000 evitementFlag
C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s:52     .text.service_callback:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s:58     .text.service_callback:00000000 service_callback
C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s:88     .text.service_callback:00000018 $d
C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s:200    .text.service_callback:000000a0 $d
C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s:208    .text.publisher_task:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s:214    .text.publisher_task:00000000 publisher_task
C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s:270    .text.publisher_task:0000003c $d
C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s:2015   .bss.pose_publisher:00000000 pose_publisher
C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s:278    .text.MX_GPIO_Init:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s:283    .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s:463    .text.MX_GPIO_Init:000000c8 $d
C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s:471    .text.MX_DMA_Init:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s:476    .text.MX_DMA_Init:00000000 MX_DMA_Init
C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s:537    .text.MX_DMA_Init:00000040 $d
C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s:542    .rodata.StartDefaultTask.str1.4:00000000 $d
C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s:561    .text.StartDefaultTask:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s:567    .text.StartDefaultTask:00000000 StartDefaultTask
C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s:728    .text.StartDefaultTask:000000f0 $d
C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s:1931   .bss.huart2:00000000 huart2
C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s:2022   .bss.allocator:00000000 allocator
C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s:2029   .bss.support:00000000 support
C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s:2036   .bss.node:00000000 node
C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s:1987   .bss.executor:00000000 executor
C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s:1973   .bss.response_msg:00000000 response_msg
C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s:1980   .bss.request_msg:00000000 request_msg
C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s:2001   .bss.bool_msg:00000000 bool_msg
C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s:2008   .bss.bool_subscriber:00000000 bool_subscriber
C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s:1994   .bss.service:00000000 service
C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s:757    .text.HAL_TIM_PeriodElapsedCallback:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s:763    .text.HAL_TIM_PeriodElapsedCallback:00000000 HAL_TIM_PeriodElapsedCallback
C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s:870    .text.HAL_TIM_PeriodElapsedCallback:00000080 $d
C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s:2050   .bss.mutex_button:00000000 mutex_button
C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s:880    .text.Error_Handler:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s:886    .text.Error_Handler:00000000 Error_Handler
C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s:918    .text.MX_TIM1_Init:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s:923    .text.MX_TIM1_Init:00000000 MX_TIM1_Init
C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s:1138   .text.MX_TIM1_Init:000000d8 $d
C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s:1966   .bss.htim1:00000000 htim1
C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s:1144   .text.MX_TIM3_Init:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s:1149   .text.MX_TIM3_Init:00000000 MX_TIM3_Init
C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s:1254   .text.MX_TIM3_Init:00000058 $d
C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s:1959   .bss.htim3:00000000 htim3
C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s:1260   .text.MX_TIM4_Init:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s:1265   .text.MX_TIM4_Init:00000000 MX_TIM4_Init
C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s:1370   .text.MX_TIM4_Init:00000058 $d
C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s:1952   .bss.htim4:00000000 htim4
C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s:1376   .text.MX_TIM7_Init:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s:1381   .text.MX_TIM7_Init:00000000 MX_TIM7_Init
C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s:1459   .text.MX_TIM7_Init:00000044 $d
C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s:1945   .bss.htim7:00000000 htim7
C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s:1465   .text.MX_USART2_UART_Init:00000000 $t
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s 			page 78


C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s:1470   .text.MX_USART2_UART_Init:00000000 MX_USART2_UART_Init
C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s:1525   .text.MX_USART2_UART_Init:0000002c $d
C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s:1531   .text.MX_TIM14_Init:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s:1536   .text.MX_TIM14_Init:00000000 MX_TIM14_Init
C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s:1584   .text.MX_TIM14_Init:00000024 $d
C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s:1938   .bss.htim14:00000000 htim14
C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s:1590   .text.SystemClock_Config:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s:1596   .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s:1747   .text.SystemClock_Config:0000009c $d
C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s:1753   .text.main:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s:1759   .text.main:00000000 main
C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s:1874   .text.main:000000a8 $d
C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s:1899   .rodata.defaultTask_attributes:00000000 defaultTask_attributes
C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s:1910   .bss.defaultTaskHandle:00000000 defaultTaskHandle
C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s:1892   .rodata.str1.4:00000000 $d
C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s:1896   .rodata.defaultTask_attributes:00000000 $d
C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s:1907   .bss.defaultTaskHandle:00000000 $d
C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s:1917   .bss.hdma_usart2_tx:00000000 hdma_usart2_tx
C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s:1914   .bss.hdma_usart2_tx:00000000 $d
C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s:1924   .bss.hdma_usart2_rx:00000000 hdma_usart2_rx
C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s:1921   .bss.hdma_usart2_rx:00000000 $d
C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s:1928   .bss.huart2:00000000 $d
C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s:1935   .bss.htim14:00000000 $d
C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s:1942   .bss.htim7:00000000 $d
C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s:1949   .bss.htim4:00000000 $d
C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s:1956   .bss.htim3:00000000 $d
C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s:1963   .bss.htim1:00000000 $d
C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s:1970   .bss.response_msg:00000000 $d
C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s:1977   .bss.request_msg:00000000 $d
C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s:1984   .bss.executor:00000000 $d
C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s:1991   .bss.service:00000000 $d
C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s:1998   .bss.bool_msg:00000000 $d
C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s:2005   .bss.bool_subscriber:00000000 $d
C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s:2012   .bss.pose_publisher:00000000 $d
C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s:2019   .bss.allocator:00000000 $d
C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s:2026   .bss.support:00000000 $d
C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s:2033   .bss.node:00000000 $d
C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s:2043   .bss.ulHighFrequencyTimerTicks:00000000 ulHighFrequencyTimerTicks
C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s:2040   .bss.ulHighFrequencyTimerTicks:00000000 $d
C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s:2047   .bss.mutex_button:00000000 $d
C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s:2057   .bss.evitementFlag:00000000 $d
C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s:99     .text.service_callback:00000023 $d
C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s:99     .text.service_callback:00000024 $t

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
osDelay
move_distance
rotate
Robot_Locate
run_motors
stop_motors
PWM_R
PWM_L
__aeabi_f2d
rcl_publish
current_x
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccp8NSnJ.s 			page 79


current_y
current_phi_deg
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
rmw_uros_set_custom_transport
rcutils_get_default_allocator
rclc_support_init
rclc_node_init_default
rosidl_typesupport_c__get_message_type_support_handle__geometry_msgs__msg__Vector3
rclc_publisher_init_default
rosidl_typesupport_c__get_message_type_support_handle__std_msgs__msg__Bool
rclc_subscription_init_default
rosidl_typesupport_microxrcedds_c__get_service_type_support_handle__service__srv__NaviStm
rclc_service_init_default
rclc_executor_init
rclc_executor_add_service
rclc_executor_add_subscription
memset
osThreadNew
rclc_executor_spin_some
cubemx_transport_read
cubemx_transport_write
cubemx_transport_close
cubemx_transport_open
update_position
PWM_sign_change_counter
HAL_GPIO_ReadPin
speed_calcul
HAL_IncTick
t
HAL_TIM_PWM_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_PWM_ConfigChannel
HAL_TIMEx_ConfigBreakDeadTime
HAL_TIM_MspPostInit
HAL_TIM_Encoder_Init
HAL_TIM_Base_Init
HAL_UART_Init
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
set_dimentions
set_motors
set_right_encoder
set_left_encoder
HAL_TIM_Base_Start_IT
set_PWM_min
osKernelInitialize
osKernelStart
